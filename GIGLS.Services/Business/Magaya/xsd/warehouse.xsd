<xs:schema xmlns="http://www.magaya.com/XMLSchema/V1" xmlns:mstns="http://www.magaya.com/XMLSchema/V1" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.magaya.com/XMLSchema/V1" elementFormDefault="qualified" version="1.0">
  <xs:complexType name="AddressType">
    <xs:sequence>
      <!--
 Street and Number. This field can be repeated up to three times 
-->
      <xs:element name="Street" type="xs:string" minOccurs="0" maxOccurs="3"/>
      <!--  City  -->
      <xs:element name="City" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  State  -->
      <xs:element name="State" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Postal code  -->
      <xs:element name="ZipCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Country  -->
      <xs:element name="Country" type="CountryType" minOccurs="0" maxOccurs="1"/>
      <!--
 Optional description to describe an address when you have multiple addresses for an entity 
-->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Name of the contact at this address  -->
      <xs:element name="ContactName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Phone number of the contact at this address  -->
      <xs:element name="ContactPhone" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Phone extension of the contact at this address  -->
      <xs:element name="ContactPhoneExtension" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Fax of the contact at this address  -->
      <xs:element name="ContactFax" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  e-mail of the contact at this address  -->
      <xs:element name="ContactEmail" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 
      Standard 3-digit port code of the port where this address is located.
      This is useful, for example, for carriers that may have different locations for 
      different airports or port terminals.
      
-->
      <xs:element name="PortCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Defines an entity with address  -->
  <xs:complexType name="EntityAddressType">
    <xs:sequence>
      <xs:element name="Entity" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Address of the entity  -->
      <xs:element name="Address" type="AddressType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <!--
 Defines an event (action) that occurs in the system (cargo shipped, items scanned, cargo delivered...) 
-->
  <xs:complexType name="EventDefinitionType">
    <xs:all>
      <!--  Name describing the type of the event  -->
      <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Default location for this type of event  -->
      <xs:element name="Location" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Default details describing the event  -->
      <xs:element name="Details" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates if this type of event will be shown in the tracking by default 
-->
      <xs:element name="IncludeInTracking" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Defines the ocurrence of an event  -->
  <xs:complexType name="EventType">
    <xs:all>
      <!--  Date and time when the event ocurred  -->
      <xs:element name="Date" type="xs:dateTime" minOccurs="1" maxOccurs="1"/>
      <!--  Details describing the event  -->
      <xs:element name="Details" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Location where the event ocurred  -->
      <xs:element name="Location" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Class of the event  -->
      <xs:element name="EventDefinition" type="EventDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates if the event will be shown in the tracking 
-->
      <xs:element name="IncludeInTracking" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 A two character string describing the type of the parent transaction of this event 
-->
      <xs:element name="OwnerType" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Unique identifier of the parent transaction of this event 
-->
      <xs:element name="OwnerGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--  Number of the parent transaction of this event  -->
      <xs:element name="OwnerNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 
      URL describing a link to the parent transaction of this event used to 
      navigate when doing online tracking
      
-->
      <xs:element name="OwnerURL" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Event  -->
  <xs:element name="Event" type="EventType"/>
  <!--  Defines a group of events related to a transaction  -->
  <xs:complexType name="EventList">
    <xs:sequence>
      <!--  Describes an individual event in the transaction -->
      <xs:element name="Event" type="EventType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Event list  -->
  <xs:element name="Events" type="EventList"/>
  <!--
 Definition of a port, it could be air, ocean or ground 
-->
  <xs:complexType name="PortType">
    <xs:sequence>
      <!--  Country where the port is located  -->
      <xs:element name="Country" type="CountryType" minOccurs="0" maxOccurs="1"/>
      <!--
 
      Defines the type of port (Air, Ocean, Ground...). This element can be repeated 
      for each different method of transportation
      
-->
      <xs:element name="Method" type="MethodType" minOccurs="0" maxOccurs="unbounded"/>
      <!--  Name of the port  -->
      <xs:element name="Name" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Subdivision where the port is located, for example it could be FL (Florida) for the Port of Miami 
-->
      <xs:element name="Subdivision" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Notes about the port  -->
      <xs:element name="Remarks" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <!--  3-digit standard code identifying the port  -->
    <xs:attribute name="Code" type="xs:string" use="optional"/>
  </xs:complexType>
  <!--  Defines a single port element  -->
  <xs:element name="Port" type="PortType"/>
  <!--  Defines a list of ports  -->
  <xs:complexType name="PortTypeList">
    <xs:sequence>
      <!--  Describes an individual port in the list  -->
      <xs:element name="Port" type="PortType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Defines a ports element  -->
  <xs:element name="Ports" type="PortTypeList"/>
  <!--
 Definition of a country. A string with the country name with the two letter code as attribute 
-->
  <xs:complexType name="CountryType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <!--  Standard 2-digit country code  -->
        <xs:attribute name="Code" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--  Defines a mode of transportation   -->
  <xs:complexType name="ModeOfTransportationType">
    <xs:all>
      <!--  Description of the mode of transportation  -->
      <xs:element name="Description" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--
 Describes the mode of transportation such as Air, Ocean or Ground...
-->
      <xs:element name="Method" type="MethodType" minOccurs="1" maxOccurs="1"/>
      <!--
 Determines if this is the default mode of transportation 
-->
      <xs:element name="Default" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <!--  Code of the mode of transportation  -->
    <xs:attribute name="Code" type="twoCharsString" use="required"/>
  </xs:complexType>
  <!--
 Enumerated value that defines a Method (media) of transportation 
-->
  <xs:simpleType name="twoCharsString">
    <xs:restriction base="xs:string">
      <xs:length value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
 Enumerated value that defines a Method (media) of transportation 
-->
  <xs:simpleType name="MethodType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Air"/>
      <xs:enumeration value="Ocean"/>
      <xs:enumeration value="Ground"/>
      <xs:enumeration value="Mail"/>
      <xs:enumeration value="Pipe"/>
      <xs:enumeration value="Rail"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Enumerated value that defines temperature units  -->
  <xs:simpleType name="TemperatureUnitType">
    <xs:restriction base="xs:string">
      <!--  Celsius  -->
      <xs:enumeration value="C"/>
      <!--  Fahrenheit  -->
      <xs:enumeration value="F"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Enumerated value that defines weight units  -->
  <xs:simpleType name="WeightUnitType">
    <xs:restriction base="xs:string">
      <!--  Kilogram  -->
      <xs:enumeration value="kg"/>
      <!--  Gram  -->
      <xs:enumeration value="g"/>
      <!--  Pound  -->
      <xs:enumeration value="lb"/>
      <!--  Ton  -->
      <xs:enumeration value="t"/>
      <!--  Ounce  -->
      <xs:enumeration value="oz"/>
      <!--  Troy ounce  -->
      <xs:enumeration value="ozt"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Enumerated value that defines time units  -->
  <xs:simpleType name="TimeUnitType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="sec"/>
      <xs:enumeration value="min"/>
      <xs:enumeration value="hour"/>
      <xs:enumeration value="day"/>
      <xs:enumeration value="week"/>
      <xs:enumeration value="month"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Enumerated value that defines volume units  -->
  <xs:simpleType name="VolumeUnitType">
    <xs:restriction base="xs:string">
      <!--  Cubic meter  -->
      <xs:enumeration value="m3"/>
      <!--  Cubic inch  -->
      <xs:enumeration value="in3"/>
      <!--  Cubic foot  -->
      <xs:enumeration value="ft3"/>
      <!--  Cubic centimeter  -->
      <xs:enumeration value="cm3"/>
      <!--  Cubic decimeter  -->
      <xs:enumeration value="dm3"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Enumerated value that defines area units  -->
  <xs:simpleType name="AreaUnitType">
    <xs:restriction base="xs:string">
      <!--  Square meter  -->
      <xs:enumeration value="m2"/>
      <!--  Square inch  -->
      <xs:enumeration value="in2"/>
      <!--  Square foot  -->
      <xs:enumeration value="ft2"/>
      <!--  Square kilometer  -->
      <xs:enumeration value="km2"/>
      <!--  Square centimeter  -->
      <xs:enumeration value="cm2"/>
      <!--  Square decimeter  -->
      <xs:enumeration value="dm2"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Enumerated value that defines length units  -->
  <xs:simpleType name="LengthUnitType">
    <xs:restriction base="xs:string">
      <!--  Meter  -->
      <xs:enumeration value="m"/>
      <!--  Inch  -->
      <xs:enumeration value="in"/>
      <!--  Foot  -->
      <xs:enumeration value="ft"/>
      <!--  Millimeter  -->
      <xs:enumeration value="mm"/>
      <!--  Centimeter  -->
      <xs:enumeration value="cm"/>
      <!--  Decimeter  -->
      <xs:enumeration value="dm"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Enumerated value that defines volume-weight units  -->
  <xs:simpleType name="VolumeWeightUnitType">
    <xs:restriction base="xs:string">
      <!--  Cubic meter  -->
      <xs:enumeration value="m3"/>
      <!--  Cubic foot  -->
      <xs:enumeration value="ft3"/>
      <!--  Volume pound  -->
      <xs:enumeration value="vlb"/>
      <!--  Volume kilogram  -->
      <xs:enumeration value="vkg"/>
      <!--  Volume gram  -->
      <xs:enumeration value="vg"/>
      <!--  Volume ton  -->
      <xs:enumeration value="vt"/>
      <!--  Volume ounce  -->
      <xs:enumeration value="voz"/>
      <!--  Volume troy ounce  -->
      <xs:enumeration value="vozt"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
 Value that expresses a length with the measurement unit as an attribute 
-->
  <xs:complexType name="LenghtValue">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <!--  Unit in which the value is expressed  -->
        <xs:attribute name="Unit" type="LengthUnitType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--
 Value that expresses a volume with the measurement unit as an attribute 
-->
  <xs:complexType name="VolumeValue">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <!--  Unit in which the value is expressed  -->
        <xs:attribute name="Unit" type="VolumeUnitType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--
 Value that expresses an area with the measurement unit as an attribute 
-->
  <xs:complexType name="AreaValue">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <!--  Unit in which the value is expressed  -->
        <xs:attribute name="Unit" type="AreaUnitType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--
 Value that expresses a temperature with the measurement unit as an attribute 
-->
  <xs:complexType name="TemperatureValue">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <!--  Unit in which the value is expressed  -->
        <xs:attribute name="Unit" type="TemperatureUnitType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--
 Value that expresses a temperature with the measurement unit as an attribute 
-->
  <xs:complexType name="TemperatureStringValue">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <!--  Unit in which the value is expressed  -->
        <xs:attribute name="Unit" type="TemperatureUnitType" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--
 Value that expresses a weight with the measurement unit as an attribute 
-->
  <xs:complexType name="WeightValue">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <!--  Unit in which the value is expressed  -->
        <xs:attribute name="Unit" type="WeightUnitType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--
 Value that expresses a time with the measurement unit as an attribute 
-->
  <xs:complexType name="TimeValue">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <!--  Unit in which the value is expressed  -->
        <xs:attribute name="Unit" type="TimeUnitType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--
 Value that expresses a volume-weight with the measurement unit as an attribute 
-->
  <xs:complexType name="VolumeWeightValue">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <!--  Unit in which the value is expressed  -->
        <xs:attribute name="Unit" type="VolumeWeightUnitType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--
 Value that expresses a monetary value with the currency as an attribute 
-->
  <xs:complexType name="MoneyValue">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <!--  Currency in which the value is expressed  -->
        <xs:attribute name="Currency" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--
 Value that expresses a monetary value with the currency and the exchange rate as an attribute 
-->
  <xs:complexType name="MoneyValueEx">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <!--  Currency in which the value is expressed  -->
        <xs:attribute name="Currency" type="xs:string" use="required"/>
        <!--  Exchange rate in which the value is expressed  -->
        <xs:attribute name="ExchangeRate" type="xs:double" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--  Item element  -->
  <xs:element name="Item" type="ItemType"/>
  <!--  Defines a list of items  -->
  <xs:complexType name="ItemList">
    <xs:sequence>
      <!--  Describes an individual item in the list -->
      <xs:element name="Item" type="ItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Defines a list of serial numbers  -->
  <xs:complexType name="SerialNumbersList">
    <xs:sequence>
      <!--  Describes an individual item in the list -->
      <xs:element name="SerialNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--
 Defines an item. It can be a commodity, product, cargo to move, cargo to store, ... 
-->
  <xs:complexType name="ItemType">
    <xs:all>
      <!--  Current version of this definition  -->
      <xs:element name="Version" type="xs:byte" minOccurs="0" maxOccurs="1"/>
      <!--
 Status of the item in the system. Arriving, OnHand, Pending, Intransit, Delivered, ... 
-->
      <xs:element name="Status" type="ItemStatusType" minOccurs="0" maxOccurs="1"/>
      <!--
 Package used to pack the item. Box, pallet, skid, ... 
-->
      <xs:element name="Package" type="PackageType" minOccurs="0" maxOccurs="1"/>
      <!--  Description of the package used to pack the item  -->
      <xs:element name="PackageName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Amount of pieces of the item  -->
      <xs:element name="Pieces" type="xs:nonNegativeInteger" minOccurs="1" maxOccurs="1"/>
      <!--  Length of the item  -->
      <xs:element name="Length" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  Height of the item  -->
      <xs:element name="Height" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  Width of the item  -->
      <xs:element name="Width" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  Weight of one piece of the item  -->
      <xs:element name="PieceWeight" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Volume of one piece of the item  -->
      <xs:element name="PieceVolume" type="VolumeValue" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates that the weight of the contained pieces is already included in Weight of the item 
-->
      <xs:element name="ContainedPiecesWeightIncluded" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Total Weight of all the pieces of the item  -->
      <xs:element name="Weight" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Total Volume of all the pieces of the item  -->
      <xs:element name="Volume" type="VolumeValue" minOccurs="0" maxOccurs="1"/>
      <!--  Total Volume Weight of all the pieces of the item  -->
      <xs:element name="VolumeWeight" type="VolumeWeightValue" minOccurs="0" maxOccurs="1"/>
      <!--
 Quantity of pieces used to calculate the value of the merchandise 
-->
      <xs:element name="PieceQuantity" type="xs:double" minOccurs="0" maxOccurs="1"/>
      <!--
 Measurement unit in which the quantity of pieces is expressed 
-->
      <xs:element name="QuantityUnit" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Currency in which the merchandise value is expressed 
-->
      <xs:element name="Currency" type="CurrencyType" minOccurs="0" maxOccurs="1"/>
      <!--  Unitary value of the merchandise  -->
      <xs:element name="UnitaryValue" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--
 Total value of the merchandise. TotalValue = PieceQuantity * UnitaryValue 
-->
      <xs:element name="TotalValue" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates that the item is representing a summary of grouped items by part number, lot number and expiration date 
-->
      <xs:element name="IsSummarized" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  List of serial numbers (if the item is summarized)  -->
      <xs:element name="SerialNumbers" type="SerialNumbersList" minOccurs="0" maxOccurs="1"/>
      <!--
 Item identification serial number. It is the container number if the item is a container 
-->
      <xs:element name="SerialNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Model of the item  -->
      <xs:element name="Model" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Description of the item  -->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Part number of the item. It is the container seal number 1 if the item is a container 
-->
      <xs:element name="PartNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Lot number of the item. It is the container seal number 2 if the item is a container  
-->
      <xs:element name="LotNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Invoice number provided by the supplier  -->
      <xs:element name="SupplierInvoiceNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Purchase order number provided by the supplier  -->
      <xs:element name="SupplierPONumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Definition of this item. Used to keep inventory by part number. See ItemDefinitionType 
-->
      <xs:element name="ItemDefinition" type="ItemDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--
 List of items contained within this item. For example items inside a pallet or container 
-->
      <xs:element name="ContainedItems" type="ItemList" minOccurs="0" maxOccurs="1"/>
      <!--
 Unique identifier (GUID) of the item where this item is contained. For example the identifier of a pallet 
-->
      <xs:element name="UpItemGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--
 Item identification serial number of the item where this item is contained. 
				 It is the container number if the item is a container 
-->
      <xs:element name="UpItemSerialNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Part number of the item where this item is contained. 
				 It is the container seal number 1 if the item is a container 
-->
      <xs:element name="UpItemPartNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Lot number of the item where this item is contained. 
				 It is the container seal number 2 if the item is a container  
-->
      <xs:element name="UpItemLotNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 
      If this item was created by breaking some pieces of another item 
      (for example selecting partial pieces) then this is the Unique identifier (GUID) of the original item
      
-->
      <xs:element name="ParentItemGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--
 Unique identifier (GUID) of the Warehouse Receipt that this item belongs to 
-->
      <xs:element name="WarehouseReceiptGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--
 Unique identifier (GUID) of the Purchase Order that this item belongs to 
-->
      <xs:element name="PurchaseOrderGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--
 Unique identifier (GUID) of the Sales Order that this item belongs to 
-->
      <xs:element name="SalesOrderGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--
 Unique identifier (GUID) of the Job that this item belongs to 
-->
      <xs:element name="JobGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--
 
      Line number of this item in the Warehouse Receipt. 
      The number is incremented in the order the items are added to the Warehouse Receipt 
      
-->
      <xs:element name="WHRItemID" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Tracking number for this item  -->
      <xs:element name="TrackingNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ExternalTrackingNumbers" type="TrackingNumberInfoList" minOccurs="0" maxOccurs="1"/>
      <!--
 Pallet Identification in case this item is a pallet 
-->
      <xs:element name="PalletID" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Current location code of this item within the warehouse 
-->
      <xs:element name="LocationCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Current location of this item within the warehouse  -->
      <xs:element name="Location" type="LocationType" minOccurs="0" maxOccurs="1"/>
      <!--
 Previous location of this item within the warehouse 
-->
      <xs:element name="PreviousLocation" type="LocationType" minOccurs="0" maxOccurs="1"/>
      <!--
 Information related to the AES system for US Customs 
-->
      <xs:element name="AESData" type="AESDataType" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates if the item is included in the EEI (former SED) declaration for US Customs 
-->
      <xs:element name="IncludeInSED" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 Information related to the AMS system for US Customs 
-->
      <xs:element name="AMSData" type="AMSDataType" minOccurs="0" maxOccurs="1"/>
      <!--  Hazardous material information  -->
      <xs:element name="Hazardous" type="HazardousType" minOccurs="0" maxOccurs="1"/>
      <!--  Notes for this item  -->
      <xs:element name="Notes" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  WaybillNotes for this item  -->
      <xs:element name="WaybillNotes" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Attachments for this item. It can be pictures or other documents. Binary data is encoded in Encode64 format 
-->
      <xs:element name="Attachments" type="AttachmentList" minOccurs="0" maxOccurs="1"/>
      <!--
 Unique identifier (GUID) of the Pickup Order that contains this item 
-->
      <xs:element name="PickupOrderGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--
 Unique identifier (GUID) of the Outgoing Shipment that contains this item 
-->
      <xs:element name="OutShipmentGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--
 Unique identifier (GUID) of the Incoming Shipment that contains this item 
-->
      <xs:element name="InShipmentGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--
 Unique identifier (GUID) of the Cargo Release that contains this item 
-->
      <xs:element name="CargoReleaseGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--
 Master waybill number of the Outgoing Shipment that contains this item 
-->
      <xs:element name="OutMasterWayBillNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 House waybill number of the Outgoing Shipment that contains this item 
-->
      <xs:element name="OutHouseWayBillNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Master waybill number of the Incoming Shipment that contains this item 
-->
      <xs:element name="InMasterWayBillNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 House waybill number of the Incoming Shipment that contains this item 
-->
      <xs:element name="InHouseWayBillNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Number of the Warehouse Receipt that contains this item 
-->
      <xs:element name="WarehouseReceiptNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Number of the Pickup Order that contains this item  -->
      <xs:element name="PickupOrderNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Number of the Cargo Release that contains this item 
-->
      <xs:element name="CargoReleaseNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Number of the Sales Order that contains this item  -->
      <xs:element name="SalesOrderNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Number of the Job that contains this item  -->
      <xs:element name="JobNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Date of arrival  -->
      <xs:element name="ArrivalDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Date of departure  -->
      <xs:element name="OutDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Last Magaya Network node that received this item  -->
      <xs:element name="LastReceptionNetworkID" type="xs:long" minOccurs="0" maxOccurs="1"/>
      <!--
 Type of shipment (Air, Ocean, Ground) where this item was shipped 
-->
      <xs:element name="ShipmentType" type="MethodType" minOccurs="0" maxOccurs="1"/>
      <!--  True if this item is a container  -->
      <xs:element name="IsContainer" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Additional information if this item is a container  -->
      <xs:element name="ContainerInfo" type="ContainerType" minOccurs="0" maxOccurs="1"/>
      <!--
 Index of this item in the item list within the parent operation. For example a shipment 
-->
      <xs:element name="OrderIndex" type="xs:integer" minOccurs="0" maxOccurs="1"/>
      <!--  True if this Item is a pallet in the Magaya WMS  -->
      <xs:element name="IsPallet" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 True if this item came as over stock after the Receive operation by Magaya Mobile WMS 
-->
      <xs:element name="IsOverstock" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 True if the item was not loaded in the Load operation of Magaya Mobile WMS 
-->
      <xs:element name="NotLoaded" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  True if this item is included in a WMS task  -->
      <xs:element name="InTask" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 URL to track the Warehouse Receipt where this item is included 
-->
      <xs:element name="WarehouseReceiptURL" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 URL to track the Pickup Order where this item is included 
-->
      <xs:element name="PickupOrderURL" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 URL to track the Shipment where this item was shipped 
-->
      <xs:element name="OutShipmentURL" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  URL to track the Shipment where this item came in  -->
      <xs:element name="InShipmentURL" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 URL to track the Cargo Release where this item was released 
-->
      <xs:element name="CargoReleaseURL" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 URL to track the Sales Order where this item was sold 
-->
      <xs:element name="SalesOrderURL" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  URL to track the Job where this item was included  -->
      <xs:element name="JobURL" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 URL to track the Purchase Order where this item was bought 
-->
      <xs:element name="PurchaseOrderURL" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Purchase information when buying this item with a Purchase Order 
-->
      <xs:element name="PurchaseCharge" type="ChargeType" minOccurs="0" maxOccurs="1"/>
      <!--
 Sales information when selling this item with a Sales Order 
-->
      <xs:element name="SalesCharge" type="ChargeType" minOccurs="0" maxOccurs="1"/>
      <!--  CommodityType name of the item  -->
      <xs:element name="CommodityTypeName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Manufacturer  -->
      <xs:element name="Manufacturer" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--
 Line number of this item in the Purchase Order. 
				 The number is incremented in the order the items are added to the Purchase Order.
				 When importing a PO from a third party system this field can be used to set the line number within that PO							 
			
-->
      <xs:element name="POLineID" type="xs:integer" minOccurs="0" maxOccurs="1"/>
      <!--
 Line number of this item in the Sales Order. 
				 The number is incremented in the order the items are added to the Sales Order
			
-->
      <xs:element name="SOLineID" type="xs:integer" minOccurs="0" maxOccurs="1"/>
      <!--  If true this line is canceled  -->
      <xs:element name="IsCancel" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 True if this item is a kit/bundle that groups other items in a Sales Order or Commerce Quotation 
-->
      <xs:element name="IsKitItem" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 True if this item is included in a kit/bundle item in a Sales Order or Commerce Quotation 
-->
      <xs:element name="IsInKit" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 True if the items of a kit/bundle item must be shown on documents such as the Sales Order 
-->
      <xs:element name="ShowKitItems" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  OnHold Status of the item  -->
      <xs:element name="HoldStatus" type="HoldStatusType" minOccurs="0" maxOccurs="1"/>
      <!--  Expiration date for this item if a any  -->
      <xs:element name="ExpirationDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Requested date for this item on a PO if a any  -->
      <xs:element name="RequestedDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Promised date for this item on a SO if a any  -->
      <xs:element name="PromisedDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Nomenclature Comun do Mercosul  -->
      <xs:element name="NCMCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Entry Date  -->
      <xs:element name="EntryDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Information related to the VGM Data for US Customs  -->
      <xs:element name="VGMData" type="VGMDataType" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <!--
 Unique identifier (GUID) of this item as an attribute 
-->
    <xs:attribute name="GUID" type="GUIDType" use="optional"/>
    <!--
 Type that classifies this type of element that is used when calling API methods 
-->
    <xs:attribute name="Type" type="xs:string" use="optional"/>
  </xs:complexType>
  <!--  Setup of a container. Used for refrigerated cargo  -->
  <xs:complexType name="ContainerType">
    <xs:all>
      <!--  Ventilation setup for the refrigerated container  -->
      <xs:element name="VentilationSetup" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates if there is a generator for the refrigerated container 
-->
      <xs:element name="GeneratorSetup" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 Temperature setup for the refrigerated container. Default unit for temperature is Celsius 
-->
      <xs:element name="TemperatureSetup" type="TemperatureStringValue" minOccurs="0" maxOccurs="1"/>
      <!--  True if this container is a Non-Operating Reefer  -->
      <xs:element name="IsNonOperatingReefer" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Package definition  -->
  <xs:complexType name="PackageType">
    <xs:all>
      <!--  Describes the type of package  -->
      <xs:element name="Type" type="PackageTypeDesc" minOccurs="1" maxOccurs="1"/>
      <!--
 Short code identifying the package such as PCS, CNT, etc. 
-->
      <xs:element name="Code" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Length of the package  -->
      <xs:element name="Length" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  Height of the package  -->
      <xs:element name="Height" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  Width of the package  -->
      <xs:element name="Width" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  Volume of the package  -->
      <xs:element name="Volume" type="VolumeValue" minOccurs="0" maxOccurs="1"/>
      <!--  Weight of the empty package  -->
      <xs:element name="Weight" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Maximum weight that can be placed in this package  -->
      <xs:element name="MaxWeight" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Name of the package  -->
      <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--
 Code of the equipment when the package is a container
-->
      <xs:element name="ContainerCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Type of the equipment when the package is a container
-->
      <xs:element name="ContainerEquipType" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Methods of transportation used to move the equipment (for package type containers)
-->
      <xs:element name="Methods" type="MethodList" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--
 Enumerated value that defines the types of packages 
-->
  <xs:simpleType name="PackageTypeDesc">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Container"/>
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Pallet"/>
      <xs:enumeration value="Box"/>
      <xs:enumeration value="Bag"/>
      <xs:enumeration value="Drum"/>
      <xs:enumeration value="Skid"/>
      <xs:enumeration value="Tank"/>
      <xs:enumeration value="Crate"/>
      <xs:enumeration value="Barrel"/>
      <xs:enumeration value="Bottle"/>
      <xs:enumeration value="Basket"/>
      <xs:enumeration value="Cabinet"/>
      <xs:enumeration value="Cones"/>
      <xs:enumeration value="Cylinder"/>
      <xs:enumeration value="Envelope"/>
      <xs:enumeration value="Frame"/>
      <xs:enumeration value="Gallon"/>
      <xs:enumeration value="Parcel"/>
      <xs:enumeration value="Pieces"/>
      <xs:enumeration value="Package"/>
      <xs:enumeration value="Rack"/>
      <xs:enumeration value="Roll"/>
      <xs:enumeration value="Sheet"/>
      <xs:enumeration value="Tube"/>
      <xs:enumeration value="Tray"/>
      <xs:enumeration value="Vehicles"/>
      <xs:enumeration value="Wrapped"/>
      <xs:enumeration value="Bundle"/>
      <xs:enumeration value="BingChest"/>
      <xs:enumeration value="Bin"/>
      <xs:enumeration value="Bucket"/>
      <xs:enumeration value="Bale"/>
      <xs:enumeration value="Can"/>
      <xs:enumeration value="Carcass"/>
      <xs:enumeration value="Case"/>
      <xs:enumeration value="ContainerBulkCargo"/>
      <xs:enumeration value="Carboy"/>
      <xs:enumeration value="CanCase"/>
      <xs:enumeration value="Chest"/>
      <xs:enumeration value="Coil"/>
      <xs:enumeration value="Cord"/>
      <xs:enumeration value="Cask"/>
      <xs:enumeration value="Carton"/>
      <xs:enumeration value="DryBulk"/>
      <xs:enumeration value="HeadOfBeef"/>
      <xs:enumeration value="Hamper"/>
      <xs:enumeration value="Keg"/>
      <xs:enumeration value="LiquidBulk"/>
      <xs:enumeration value="Log"/>
      <xs:enumeration value="Lug"/>
      <xs:enumeration value="LiftVan"/>
      <xs:enumeration value="Pail"/>
      <xs:enumeration value="PrivatelyOwnedVehicle"/>
      <xs:enumeration value="QuarterOfBeef"/>
      <xs:enumeration value="ToteBin"/>
      <xs:enumeration value="Tin"/>
      <xs:enumeration value="Unit"/>
      <xs:enumeration value="Pack"/>
      <xs:enumeration value="WoodenCase"/>
      <xs:enumeration value="Reel"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Definition of a Stock-Keeping Unit (SKU) Number  -->
  <xs:complexType name="SKUType">
    <xs:sequence>
      <!--  future fields  -->
    </xs:sequence>
    <!--  Code of the Stock-Keeping Unit (SKU) Number  -->
    <xs:attribute name="Code" type="xs:string" use="required"/>
  </xs:complexType>
  <!--  List of SKUs related to an item definition  -->
  <xs:complexType name="SKUList">
    <xs:sequence>
      <!--
 Describes an individual Stock-Keeping Unit (SKU) in the list
-->
      <xs:element name="SKU" type="SKUType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Possible options to handle inventory items  -->
  <xs:simpleType name="InventoryTypeType">
    <xs:restriction base="xs:string">
      <!--  First In First Out  -->
      <xs:enumeration value="FIFO"/>
      <!--  Last In First Out  -->
      <xs:enumeration value="LIFO"/>
      <!--  First Expiring First Out  -->
      <xs:enumeration value="FEFO"/>
      <!--  Last Expiring First Out  -->
      <xs:enumeration value="LEFO"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Possible types of item definitions  -->
  <xs:simpleType name="ItemTypeType">
    <xs:restriction base="xs:string">
      <!--
 Item which is stored and keeps inventory quantities 
-->
      <xs:enumeration value="StockItem"/>
      <!--
 Item that is a group of other items and it is used in Sales Orders to facilitate the selling process.
				 For example a discounted price can be given to a kit that can be different from the total price of the individual items.	 
				 This item does not keep inventory quantities. 
-->
      <xs:enumeration value="KitItem"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
 Item definiton. Describes an item that you keep inventory for 
-->
  <xs:complexType name="ItemDefinitionType">
    <xs:all>
      <!--
 Type of item. It could be StockItem (default) or KitItem (bundle to group products in a Sales Order) 
-->
      <xs:element name="ItemType" type="ItemTypeType" minOccurs="0" maxOccurs="1"/>
      <!--  Part Number identifying the item  -->
      <xs:element name="PartNumber" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Model of the item  -->
      <xs:element name="Model" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Description of the item  -->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Creation date of the item  -->
      <xs:element name="CreatedOn" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--
 Existing amount of on hand pieces of this type of inventory item 
-->
      <xs:element name="Pieces" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <!--
 Amount of on hand pieces that are included in Sales Orders that have not been shipped yet 
-->
      <xs:element name="RequestedPieces" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <!--
 Default information for this type of item regarding the AES system for US Customs 
-->
      <xs:element name="AESData" type="AESDataType" minOccurs="0" maxOccurs="1"/>
      <!--
 Client for whom we are keeping inventory of this item 
-->
      <xs:element name="Client" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Manufacturer of this type of item  -->
      <xs:element name="Manufacturer" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Default package used to pack this type of item   -->
      <xs:element name="Package" type="PackageType" minOccurs="0" maxOccurs="1"/>
      <!--
 Default hazardous material information for this type of item  
-->
      <xs:element name="Hazardous" type="HazardousType" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates the amount of items that can be placed inside a pallet  
-->
      <xs:element name="AmountPerPallet" type="xs:integer" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates the minimum amount of items that we may have in inventory before submitting a Purchase Order  
-->
      <xs:element name="MinimumStock" type="xs:integer" minOccurs="0" maxOccurs="1"/>
      <!--
 List of Stock-Keeping Units (SKUs) related to this item definition  
-->
      <xs:element name="SKUNumbers" type="SKUList" minOccurs="0" maxOccurs="1"/>
      <!--
 Describes the way we handle the inventory for this item (FIFO, LIFO, FEFO or LEFO) 
-->
      <xs:element name="InventoryType" type="InventoryTypeType" minOccurs="0" maxOccurs="1"/>
      <!--  Unitary value of this item  -->
      <xs:element name="UnitaryValue" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--
 Related charge definition used to sell (Sales Order) this item 
-->
      <xs:element name="IncomeChargeDefinition" type="ChargeDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--
 Related charge definition used to buy (Purchase Order) this item 
-->
      <xs:element name="CostChargeDefinition" type="ChargeDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--  Notes about this item  -->
      <xs:element name="Notes" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 
      Amount of pieces that are ordered in a Purchase Order, arriving in a Pickup Order 
      or pending to be received in a Warehouse Receipt 
      
-->
      <xs:element name="ArrivingPieces" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <!--
 Amount of arriving pieces that are included in Sales Orders that have not been shipped yet 
-->
      <xs:element name="RequestedArrivingPieces" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <!--
 Amount of on hand pieces that are included in other Compound Items 
-->
      <xs:element name="PiecesInCompoundItems" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <!--
 Amount of arriving pieces that are included in other Compound Items 
-->
      <xs:element name="ArrivingPiecesInCompoundItems" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <!--  Amount of pieces available for sale  -->
      <xs:element name="AvailablePiecesForSale" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <!--
 True if this item definition is used to keep inventoty by serial numbers (Default is FALSE) 
-->
      <xs:element name="KeepSerialNumbers" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 True is Serial numbers need to be entered when the items are going out (default is FALSE) 
-->
      <xs:element name="KeepSerialWhenOut" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Length of the item  -->
      <xs:element name="Length" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  Height of the item  -->
      <xs:element name="Height" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  Width of the item  -->
      <xs:element name="Width" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  Weight of the item  -->
      <xs:element name="Weight" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Volume of the item  -->
      <xs:element name="Volume" type="VolumeValue" minOccurs="0" maxOccurs="1"/>
      <!--
 Images for this item definition. Binary data is encoded in Encode64 format 
-->
      <xs:element name="Images" type="AttachmentList" minOccurs="0" maxOccurs="1"/>
      <!--  Thumbnail image  -->
      <xs:element name="MainImageIdentifier" type="xs:integer" minOccurs="0" maxOccurs="1"/>
      <!--  Place Purchase Orders automatically  -->
      <xs:element name="AutoPlacePurchaseOrders" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Default quantity to order in the Purchase Orders  -->
      <xs:element name="DefaultQuantityToOrder" type="xs:integer" minOccurs="0" maxOccurs="1"/>
      <!--  CommodityType name of the item  -->
      <xs:element name="CommodityTypeName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Type of commodity  -->
      <xs:element name="CommodityType" type="CommodityTypeType" minOccurs="0" maxOccurs="1"/>
      <!--
 TRUE if when adding a kit item only add the contained items not the kit on a SO, Commerce Quote (default is FALSE) 
-->
      <xs:element name="AddKitItemsUngrouped" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 TRUE if the kit items will be shown on the SO/Quote documents (default is FALSE) 
-->
      <xs:element name="ShowKitItemsInDocs" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Nomenclature Comun do Mercosul  -->
      <xs:element name="NCMCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 True if the Item has Variable Weight (default is FALSE) 
-->
      <xs:element name="HandledWithVariableWeight" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Unit of measurement  -->
      <xs:element name="UnitOfMeasurement" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Bill of material  -->
      <xs:element name="BillOfMaterials" type="BillOfMaterialList" minOccurs="0" maxOccurs="1"/>
      <!--  Categories  -->
      <xs:element name="CategoryRefs" type="CategoriesRefList" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <!--
 Unique identifier (GUID) of this item as an attribute 
-->
    <xs:attribute name="GUID" type="GUIDType" use="optional"/>
    <!--
 Type that classifies this type of element that is used when calling API methods 
-->
    <xs:attribute name="Type" type="xs:string" use="optional"/>
  </xs:complexType>
  <!--  Possible status of the item  -->
  <xs:simpleType name="ItemStatusType">
    <xs:restriction base="xs:string">
      <!--  Item has been received in the warehouse  -->
      <xs:enumeration value="OnHand"/>
      <!--  Item is pending to be loaded in a shipment  -->
      <xs:enumeration value="ToLoad"/>
      <!--  Item was loaded in a shipment or cargo release  -->
      <xs:enumeration value="Loaded"/>
      <!--
 Item has departed the warehouse and is on its way to the destination 
-->
      <xs:enumeration value="InTransit"/>
      <!--  Item has arrived at destination  -->
      <xs:enumeration value="AtDestination"/>
      <!--  Item has been delivered to the final consignee  -->
      <xs:enumeration value="Delivered"/>
      <!--
 Item is in a Pickup Order on its way to the warehouse or another destination (ex: port) 
-->
      <xs:enumeration value="Arriving"/>
      <!--
 Item is contained in a quotation. Not related to a cargo transaction yet 
-->
      <xs:enumeration value="InQuote"/>
      <!--
 The item is a trip equipment that is available for bookings 
-->
      <xs:enumeration value="Available"/>
      <!--
 Item is inside a booking. It has already been booked 
-->
      <xs:enumeration value="Booked"/>
      <!--
 Item is inside a booking and the booking was used to create a new cargo transaction (ex: shipment) 
-->
      <xs:enumeration value="Processed"/>
      <!--
 Item is inside a warehouse receipt but not yet assigned to a location in the warehouse 
-->
      <xs:enumeration value="Pending"/>
      <!--
 Item is inside a Purchase Order but not received (OnHand) yet
-->
      <xs:enumeration value="Ordered"/>
      <!--
 The item is in a Sales Order (sold) but has not been purchased yet (it is not in a Purchase Order)
-->
      <xs:enumeration value="Backordered"/>
      <!--  The item was canceled in a Sales Order  -->
      <xs:enumeration value="Canceled"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
 Enumerated value that defines the origin of an item according to AES system in US Customs  
-->
  <xs:simpleType name="OriginType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Domestic"/>
      <xs:enumeration value="Foreign"/>
      <xs:enumeration value="Military"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Weight Verification Methods for VGM  -->
  <xs:simpleType name="VerificationMethodType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MethodOne"/>
      <xs:enumeration value="MethodTwo"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Data related to the AES system in US Customs  -->
  <xs:complexType name="AESDataType">
    <xs:all>
      <!--  Schedule B that indentifies the commodity  -->
      <xs:element name="ScheduleB" type="ScheduleBType" minOccurs="0" maxOccurs="1"/>
      <!--
 Information about the vehicle if the commodity is a vehicle 
-->
      <xs:element name="VehicleData" type="VehicleDataType" minOccurs="0" maxOccurs="1"/>
      <!--
 Military information if the commodity is a military item 
-->
      <xs:element name="MilitaryData" type="MilitaryDataType" minOccurs="0" maxOccurs="1"/>
      <!--  Export code according to US Customs  -->
      <xs:element name="ExportCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  First quantity of the commodity  -->
      <xs:element name="Quantity1" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Second quantity of the commodity  -->
      <xs:element name="Quantity2" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Type of license according to US Customs  -->
      <xs:element name="LicenseType" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  License Value according to US Customs  -->
      <xs:element name="LicenseValue" type="xs:integer" minOccurs="0" maxOccurs="1"/>
      <!--  License number as described by US Customs  -->
      <xs:element name="LicenseNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Export Control Classification Number (ECCN) as described by US Customs 
-->
      <xs:element name="ECCN" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Currency in which the value is expressed  -->
      <xs:element name="Currency" type="CurrencyType" minOccurs="0" maxOccurs="1"/>
      <!--  Value of the commodity  -->
      <xs:element name="Value" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Origin of the commodity  -->
      <xs:element name="Origin" type="OriginType" minOccurs="0" maxOccurs="1"/>
      <!--  State of Origin of the commodity  -->
      <xs:element name="StateOfOrigin" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--
 Schedule B for US Customs systems. Used for exports from United States 
-->
  <xs:complexType name="ScheduleBType">
    <xs:all>
      <!--
 General description of the commodities that follow under this classification 
-->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Unit that describes the first quantity in AESDataType 
-->
      <xs:element name="Quantity1" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Unit that describes the second quantity in AESDataType 
-->
      <xs:element name="Quantity2" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <xs:attribute name="Code" type="xs:string" use="required"/>
  </xs:complexType>
  <!--  Vehicle information for US Customs systems  -->
  <xs:complexType name="VehicleDataType">
    <xs:all>
      <!--  Indicates the type of vehicle ID (VIN or Product)  -->
      <xs:element name="VehicleIDType" type="VehicleIDTypeDesc" minOccurs="1" maxOccurs="1"/>
      <!--
 Vehicle ID, usually it is the VIN number (17-digits long) 
-->
      <xs:element name="VehicleID" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Title of the vehicle  -->
      <xs:element name="VehicleTitle" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  State of the vehicle  -->
      <xs:element name="VehicleState" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Card Order Number of the vehicle  -->
      <xs:element name="CardOrderNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Indicates if this is a new vehicle  -->
      <xs:element name="IsNewVehicle" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Year of the vehicle  -->
      <xs:element name="ModelYear" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Make of the vehicle. Ex: Acura  -->
      <xs:element name="Make" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Model of the vehicle. Ex: RDX  -->
      <xs:element name="Model" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Trim level of the vehicle. Ex: Sport Package  -->
      <xs:element name="TrimLevel" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Class of the vehicle. Ex: Small MPV  -->
      <xs:element name="VehicleClass" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Type of the vehicle. Ex: Multipurpose Vehicle (MPV) 
-->
      <xs:element name="VehicleType" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Manufacturer of the vehicle  -->
      <xs:element name="Manufacturer" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Body type of the vehicle. Ex: 4 Door Wagon   -->
      <xs:element name="BodyType" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Country where the vehicle was assembled  -->
      <xs:element name="Country" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Type of engine of the vehicle. Ex: L4, 2.3L; Turbo  -->
      <xs:element name="EngineType" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Military information for US Customs systems  -->
  <xs:complexType name="MilitaryDataType">
    <xs:all>
      <!--
 An Exemption in the International Traffic Arms Regulations (ITAR) 
-->
      <xs:element name="ExemptionNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Registration Number, is assigned by DDTC  -->
      <xs:element name="RegistrationNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  This item has militaty capability  -->
      <xs:element name="IsSignificantMilitaryEquipment" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  The party is elegible to receive USML items  -->
      <xs:element name="IsElegiblePartyCertification" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  United States Munitions List  (USML) code -->
      <xs:element name="USMLCategoryCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Unit of Measure Code   -->
      <xs:element name="UnitOfMeasureCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Quantity  -->
      <xs:element name="Quantity" type="xs:integer" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Hazardous information for US Customs systems  -->
  <xs:complexType name="HazardousType">
    <xs:all>
      <!--  Material code of this item  -->
      <xs:element name="MaterialCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Material class of this item  -->
      <xs:element name="MaterialClass" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Qualifier of the class. Ex: 1- Explosives, 2- Gases, etc. 
-->
      <xs:element name="ClassQualifier" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Description of the material  -->
      <xs:element name="MaterialDescription" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Material page number  -->
      <xs:element name="MaterialPage" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Flashpoint temperature in Celsius  -->
      <xs:element name="FlashpointTemp" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Description of the class  -->
      <xs:element name="ClassDescription" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Special instructions to handle the commodity  -->
      <xs:element name="SpecialInstructions" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Contact name in case of emergency  -->
      <xs:element name="EmergencyContact" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Contact entity in case of emergency, here you have phone,fax,etc. 
-->
      <xs:element name="EmergencyEntity" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Level of danger that this item represents  -->
      <xs:element name="HazardousLevel" type="HazardousLevelType" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Different levels of danger  -->
  <xs:simpleType name="HazardousLevelType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MinorDanger"/>
      <xs:enumeration value="MediumDanger"/>
      <xs:enumeration value="GreatDanger"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
 Possible types of vehicle ID for US Customs systems 
-->
  <xs:simpleType name="VehicleIDTypeDesc">
    <xs:restriction base="xs:string">
      <xs:enumeration value="VIN"/>
      <xs:enumeration value="Product"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Type encapsulating physical dimensions  -->
  <xs:complexType name="DimensionsType">
    <xs:all>
      <xs:element name="Length" type="LenghtValue" minOccurs="1" maxOccurs="1"/>
      <xs:element name="Width" type="LenghtValue" minOccurs="1" maxOccurs="1"/>
      <xs:element name="Height" type="LenghtValue" minOccurs="1" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <xs:element name="LocationDefinition" type="LocationDefinitionType"/>
  <xs:element name="LocationDefinitions" type="LocationDefinitionList"/>
  <xs:complexType name="LocationDefinitionList">
    <xs:sequence>
      <!--
 Describes an individual location definition in the list 
-->
      <xs:element name="LocationDefinition" type="LocationDefinitionType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--
 Defines a reusable description for a location in the warehouse 
-->
  <xs:complexType name="LocationDefinitionType">
    <xs:all>
      <!--  Description of the definition  -->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Type of location  -->
      <xs:element name="Type" type="LocationTypeDesc" minOccurs="0" maxOccurs="1"/>
      <!--  Maximum weight the location can hold  -->
      <xs:element name="MaxWeight" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Set of dimensions for the location  -->
      <xs:element name="Dimensions" type="DimensionsType" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <xs:attribute name="GUID" type="GUIDType" use="required"/>
  </xs:complexType>
  <!--  Defines a location within the warehouse  -->
  <xs:complexType name="LocationType">
    <xs:all>
      <!--
 Magaya Network node of the warehouse where this location exists 
-->
      <xs:element name="NetworkID" type="xs:long" minOccurs="0" maxOccurs="1"/>
      <!--  Description of the location  -->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Type of location. Ex: Receiving, Storage, Shipping, etc. 
-->
      <xs:element name="Type" type="LocationTypeDesc" minOccurs="0" maxOccurs="1"/>
      <!--  Length of the location  -->
      <xs:element name="Length" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  Width of the location  -->
      <xs:element name="Width" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  Height of the location  -->
      <xs:element name="Height" type="LenghtValue" minOccurs="0" maxOccurs="1"/>
      <!--  List of items in the location  -->
      <xs:element name="Items" type="ItemList" minOccurs="0" maxOccurs="1"/>
      <!--
 Name of the warehouse zone that this location belongs to 
-->
      <xs:element name="WarehouseZoneName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Definition of different values for a location  -->
      <xs:element name="LocationDefinition" type="LocationDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates if the location is disabled. if true, then it cannot be used 
-->
      <xs:element name="IsDisabled" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Customer assigned to this location  -->
      <xs:element name="Customer" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
      <!--  Sequence information  -->
      <xs:element name="SequencePosition" type="xs:integer" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <!--
 Unique code that identifies the location in the warehouse 
-->
    <xs:attribute name="Code" type="xs:string" use="required"/>
  </xs:complexType>
  <!--  Enumerated value for location types  -->
  <xs:simpleType name="LocationTypeDesc">
    <xs:restriction base="xs:string">
      <!--
 Describes a location that is used to put away items in the warehouse 
-->
      <xs:enumeration value="Storage"/>
      <!--
 Describes a location that is used for receiving cargo in the warehouse 
-->
      <xs:enumeration value="Receiving"/>
      <!--
 Describes a location that is used for shipping cargo in the warehouse 
-->
      <xs:enumeration value="Shipping"/>
      <!--
 Describes a location that is used for quality control 
-->
      <xs:enumeration value="QualityControl"/>
      <!--  Describes a location that is mobile. Ex: a truck  -->
      <xs:enumeration value="Mobile"/>
      <xs:enumeration value="Other"/>
      <!--
 Describes a location that is preferred for refilling other locations 
-->
      <xs:enumeration value="Replenishment"/>
      <!--
 Describes a location that is preferred for picking items heading out of the warehouse 
-->
      <xs:enumeration value="Picking"/>
      <!--
 Describes a location that is used for replenishment. 
-->
      <xs:enumeration value="Replenishment"/>
      <!--
 Describes a location that is used exclusively for picking. 
-->
      <xs:enumeration value="Picking"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
 List of attachments. Which can include pictures or documents of any type 
-->
  <xs:complexType name="AttachmentList">
    <xs:sequence>
      <!--  Describes an individual attachment in the list  -->
      <xs:element name="Attachment" type="AttachmentType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--
 AMS information according to the US Customs AMS system 
-->
  <xs:complexType name="AMSDataType">
    <xs:all>
      <!--  Harmonized Tariff code identifying the commodity  -->
      <xs:element name="HarmonizedTariff" type="ScheduleBType" minOccurs="0" maxOccurs="1"/>
      <!--  Vehicle information if the commodity is a vehicle  -->
      <xs:element name="Vehicle" type="VehicleDataType" minOccurs="0" maxOccurs="1"/>
      <!--  Country of origin of the commodity  -->
      <xs:element name="Country" type="CountryType" minOccurs="0" maxOccurs="1"/>
      <!--
 Type of service. Ex: BB- Break bulk, PP- Pier to pier 
-->
      <xs:element name="TypeOfService" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Currency in which the value is expressed  -->
      <xs:element name="Currency" type="CurrencyType" minOccurs="0" maxOccurs="1"/>
      <!--  Value of the commodity  -->
      <xs:element name="Value" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  VGM Data according to the US Customs  -->
  <xs:complexType name="VGMDataType">
    <xs:all>
      <!--  Verification Method  -->
      <xs:element name="VerificationMethod" type="VerificationMethodType" minOccurs="0" maxOccurs="1"/>
      <!--  VGM  -->
      <xs:element name="VGM" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Container Tare Weight  -->
      <xs:element name="ContainerTareWeight" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Total Weight of Cargo  -->
      <xs:element name="TotalCargoWeight" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Verification Date  -->
      <xs:element name="VerificationDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Verification Party  -->
      <xs:element name="VerifyingParty" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Verification Signature  -->
      <xs:element name="VerificationSignature" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Phone Number  -->
      <xs:element name="PhoneNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Defines an attacment. It can be any type of file  -->
  <xs:complexType name="AttachmentType">
    <xs:all>
      <!--  Name of the attacment  -->
      <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  File extension of the attacment  -->
      <xs:element name="Extension" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Actual data of the attachment encoded in base64 format 
-->
      <xs:element name="Data" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/>
      <!--  Size of the data in it's binary format  -->
      <xs:element name="Size" type="xs:long" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates if the attachment is an image. Ex: JPG, BMP, etc. 
-->
      <xs:element name="IsImage" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 
      Unique identifier of the attachment in the database. 
      This is used to retrieve the attachment when necessary 
      
-->
      <xs:element name="Identifier" type="xs:long" minOccurs="0" maxOccurs="1"/>
      <!--
 
      Code that describes the type of operation where the attachment is contained. Ex: SH for shipment. 
      This is used to retrieve the attachment when necessary 
      
-->
      <xs:element name="OwnerType" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 
      Unique identifier (GUID) of the operation where the attachment is contained. 
      This is used to retrieve the attachment when necessary 
      
-->
      <xs:element name="OwnerGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
      <!--  Indicates if the attachment is internal.  -->
      <xs:element name="IsInternal" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--
 List of charges. Used in cargo transaction, invoices and bills. 
-->
  <xs:complexType name="ChargeList">
    <xs:sequence>
      <!--  Describes an individual charge in the list  -->
      <xs:element name="Charge" type="ChargeType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <!--
 If true, it means the charge list is shown in the order in which the charges appear in the list.
			 If false, it means the charge list is shown following the default sorting algorithm.
	    
-->
    <xs:attribute name="UseSequenceOrder" type="xs:boolean" use="optional"/>
  </xs:complexType>
  <!--  Charge list  -->
  <xs:element name="Charges" type="ChargeList"/>
  <!--  Defines a list of account item lines  -->
  <xs:complexType name="AccountItemLineList">
    <xs:sequence>
      <!--
 Describes an individual account item line in the list 
-->
      <xs:element name="AccountItemLine" type="AccountItemLineType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Defines an account item line  -->
  <xs:complexType name="AccountItemLineType">
    <xs:all>
      <!--  Account -->
      <xs:element name="Account" type="AccountDefinitionType" minOccurs="1" maxOccurs="1"/>
      <!--  Line amount in home currency  -->
      <xs:element name="Amount" type="MoneyValue" minOccurs="1" maxOccurs="1"/>
      <!--  Line amount in transaction currency  -->
      <xs:element name="AmountInCurrency" type="MoneyValue" minOccurs="1" maxOccurs="1"/>
      <!--  Description  -->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Related Entity  -->
      <xs:element name="Entity" type="EntityType" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--
 Currency definition with three letter code as an attribute 
-->
  <xs:complexType name="CurrencyType">
    <xs:all>
      <!--  Name of the currency  -->
      <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Exchange rate to the home currency  -->
      <xs:element name="ExchangeRate" type="xs:double" minOccurs="0" maxOccurs="1"/>
      <!--  Decimal places of the currency. Default is 2.  -->
      <xs:element name="DecimalPlaces" type="xs:byte" minOccurs="0" maxOccurs="1"/>
      <!--  Indicates if the currency is home currency  -->
      <xs:element name="IsHomeCurrency" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <!--
 Standard 3-digit code of the currency. Ex: USD, EUR 
-->
    <xs:attribute name="Code" type="xs:string" use="required"/>
    <!--  Symbol of the currency  -->
    <xs:attribute name="Symbol" type="xs:string" use="optional"/>
  </xs:complexType>
  <!--
 Enumerated value that defines the status of a charge 
-->
  <xs:simpleType name="ChargeStatusType">
    <xs:restriction base="xs:string">
      <!--
 The charge has not been posted. Ex: when the charge has been created over an operation 
-->
      <xs:enumeration value="Open"/>
      <!--
 The charge has been posted. Ex: after a liquidation process or when creating a manual invoice 
-->
      <xs:enumeration value="Posted"/>
      <!--  The charge has been paid  -->
      <xs:enumeration value="Paid"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
 Charge used in cargo transactions, invoices and bills 
-->
  <xs:complexType name="ChargeType">
    <xs:all>
      <!--  Describes the type of charge. Standard or Freight -->
      <xs:element name="Type" type="ChargeTypeDesc" minOccurs="1" maxOccurs="1"/>
      <!--
 Definition of this charge within the accouting system. See ChargeDefinitionType. 
-->
      <xs:element name="ChargeDefinition" type="ChargeDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--  Entity to which the charge is applied  -->
      <xs:element name="Entity" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Amount to apply the price. Ex: 3.5 pounds  -->
      <xs:element name="Quantity" type="xs:double" minOccurs="1" maxOccurs="1"/>
      <!--  Price in home currency  -->
      <xs:element name="Price" type="MoneyValue" minOccurs="1" maxOccurs="1"/>
      <!--  Amount in home currency. Amount = Quantity * Price  -->
      <xs:element name="Amount" type="MoneyValue" minOccurs="1" maxOccurs="1"/>
      <!--  Tax Amount in home currency  -->
      <xs:element name="TaxAmount" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Retention amount in home currency  -->
      <xs:element name="RetentionAmount" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Home currency  -->
      <xs:element name="HomeCurrency" type="CurrencyType" minOccurs="0" maxOccurs="1"/>
      <!--  Currency for this charge  -->
      <xs:element name="Currency" type="CurrencyType" minOccurs="1" maxOccurs="1"/>
      <!--  Exchange rate to the home currency  -->
      <xs:element name="ExchangeRate" type="xs:double" minOccurs="1" maxOccurs="1"/>
      <!--  Price in the currency of the charge  -->
      <xs:element name="PriceInCurrency" type="MoneyValue" minOccurs="1" maxOccurs="1"/>
      <!--
 Amount in the currency of the charge. AmountInCurrency = Quantity * PriceInCurrency 
-->
      <xs:element name="AmountInCurrency" type="MoneyValue" minOccurs="1" maxOccurs="1"/>
      <!--  Tax Amount in the currency of the charge  -->
      <xs:element name="TaxAmountInCurrency" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Retention Amount in the currency of the charge  -->
      <xs:element name="RetentionAmountInCurrency" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Indicates if the charge is prepaid or collect  -->
      <xs:element name="IsPrepaid" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates if the charge is to be registered as a third party charge 
-->
      <xs:element name="IsThirdPartyCharge" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Status of the charge  -->
      <xs:element name="Status" type="ChargeStatusType" minOccurs="0" maxOccurs="1"/>
      <!--  Description of the charge  -->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Notes of the charge  -->
      <xs:element name="Notes" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Units in which the quantity of the charge is expressed 
-->
      <xs:element name="Units" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Reference to the tax definition used to calculate the tax amount. See TaxDefinitionType. 
-->
      <xs:element name="TaxDefinition" type="TaxDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates if the charge can be shown on documents. Ex: Bill of Ladings, Air Waybills, etc. 
-->
      <xs:element name="ShowInDocuments" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates if the charge is a credit. Ex: inside Credit Memo or Bill Credit 
-->
      <xs:element name="IsCredit" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 Reference to the operation where this charge was liquidated, ex: Shipment, Warehouse Receipt, etc. 
-->
      <xs:element name="LiquidatedAt" type="GUIDItemType" minOccurs="0" maxOccurs="1"/>
      <!--
 Reference to the operation where this charge was created, ex: Shipment, Warehouse Receipt, etc. 
-->
      <xs:element name="CreatedAt" type="GUIDItemType" minOccurs="0" maxOccurs="1"/>
      <!--
 Reference to the parent accounting transaction of this charge, ex: Invoice, Bill, Credit Memo, Bill Credit 
-->
      <xs:element name="Parent" type="GUIDItemType" minOccurs="0" maxOccurs="1"/>
      <!--  Reference to the Sales Order of this charge -->
      <xs:element name="SalesOrder" type="GUIDItemType" minOccurs="0" maxOccurs="1"/>
      <!--  Reference to the Purchae Order of this charge -->
      <xs:element name="PurchaseOrder" type="GUIDItemType" minOccurs="0" maxOccurs="1"/>
      <!--
 If the charge is a freight service this field contains freight related data 
-->
      <xs:element name="FreightChargeInfo" type="FreightChargeType" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates that this charge was generated from a segment or a route 
-->
      <xs:element name="IsFromSegment" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 Mode of transportation of the segment that generates this charge 
-->
      <xs:element name="ModeOfTransportation" type="ModeOfTransportationType" minOccurs="0" maxOccurs="1"/>
      <!--
 Point of origin of the segment that generates this charge 
-->
      <xs:element name="PointOfOrigin" type="PortType" minOccurs="0" maxOccurs="1"/>
      <!--
 Point of destination of the segment that generates this charge 
-->
      <xs:element name="PointOfDestination" type="PortType" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Type of charges  -->
  <xs:simpleType name="ChargeTypeDesc">
    <xs:restriction base="xs:string">
      <!--
 Standard charge such as Documentation, Insurance, etc. 
-->
      <xs:enumeration value="Standard"/>
      <!--
 Freight charge such as Air Freight Service, Fuel Surcharge, Bunker Surcharge, etc. 
-->
      <xs:enumeration value="Freight"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Freight related data for a freight service charge  -->
  <xs:complexType name="FreightChargeType">
    <xs:all>
      <!--  Version of this field  -->
      <xs:element name="Version" type="xs:byte" minOccurs="0" maxOccurs="1"/>
      <!--  Amount of pieces to invoice  -->
      <xs:element name="Pieces" type="xs:double" minOccurs="1" maxOccurs="1"/>
      <!--  Weight to invoice  -->
      <xs:element name="Weight" type="WeightValue" minOccurs="1" maxOccurs="1"/>
      <!--  Volume to invoice  -->
      <xs:element name="Volume" type="VolumeValue" minOccurs="1" maxOccurs="1"/>
      <!--
 Chargeable Weight. This element is output only. It only appears if the freight charge is Air or Ground. 
-->
      <xs:element name="ChargeableWeight" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--
 Flags that indicate if the charge is a minimum, maximum, etc. 
-->
      <xs:element name="Flags" type="ChargeFlagsType" minOccurs="1" maxOccurs="1"/>
      <!--
 How to calculate the freight charge. By weight, by volume, ... 
-->
      <xs:element name="ApplyBy" type="ApplyByType" minOccurs="1" maxOccurs="1"/>
      <!--  Method of transportation  -->
      <xs:element name="Method" type="MethodType" minOccurs="1" maxOccurs="1"/>
      <!--
 Measurement units indicating the precision to be used 
-->
      <xs:element name="MeasurementUnits" type="MeasurementUnitsType" minOccurs="1" maxOccurs="1"/>
      <!--
 The Freigth Charge use the Gross Weight instead of the Chargeable Weight 
-->
      <xs:element name="UseGrossWeight" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--
 Flags that indicate if the charge is a minimum, maximum, etc. 
-->
  <xs:simpleType name="ChargeFlagsType">
    <xs:restriction base="xs:string">
      <!--  A rate is being used to calculate the charge  -->
      <xs:enumeration value="Rate"/>
      <!--  It is a minimum  -->
      <xs:enumeration value="Minimum"/>
      <!--  It is a maximum  -->
      <xs:enumeration value="Maximum"/>
      <!--  A formula is being used to calculate the charge  -->
      <xs:enumeration value="Formula"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
 Definition of an account within the accounting system 
-->
  <xs:complexType name="AccountDefinitionType">
    <xs:all>
      <!--
 Describes the type of the account. Ex: Income, Expense, Bank, etc. 
-->
      <xs:element name="Type" type="AccountType" minOccurs="1" maxOccurs="1"/>
      <!--  Name of the account  -->
      <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Number of the account  -->
      <xs:element name="Number" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Notes of the account  -->
      <xs:element name="Notes" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Currency of the account  -->
      <xs:element name="Currency" type="CurrencyType" minOccurs="1" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
      <!--  Parent Account  -->
      <xs:element name="ParentAccount" type="AccountDefinitionType" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Types of accounts  -->
  <xs:simpleType name="AccountType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="AccountReceivable"/>
      <xs:enumeration value="AccountPayable"/>
      <xs:enumeration value="Income"/>
      <xs:enumeration value="Expense"/>
      <xs:enumeration value="CostOfGoodsSold"/>
      <xs:enumeration value="BankAccount"/>
      <xs:enumeration value="FixedAssets"/>
      <xs:enumeration value="OtherAssets"/>
      <xs:enumeration value="OtherCurrentAssets"/>
      <xs:enumeration value="LongTermLiability"/>
      <xs:enumeration value="OtherCurrentLiability"/>
      <xs:enumeration value="Equity"/>
      <xs:enumeration value="CreditCard"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Definition of a charge in the accounting system  -->
  <xs:complexType name="ChargeDefinitionType">
    <xs:all>
      <!--
 Type of charge definition such as Freight, Inventory, etc. 
-->
      <xs:element name="Type" type="ChargeDefType" minOccurs="1" maxOccurs="1"/>
      <!--  Description of the charge definition  -->
      <xs:element name="Description" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Code of the charge definition  -->
      <xs:element name="Code" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--
 Reference to the account definition related to this charge. See AccountDefinitionType. 
-->
      <xs:element name="AccountDefinition" type="AccountDefinitionType" minOccurs="1" maxOccurs="1"/>
      <!--
 Default amount of the charge in the selected currency 
-->
      <xs:element name="Amount" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Notes of the charge definition  -->
      <xs:element name="Notes" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Currency for the charge definition  -->
      <xs:element name="Currency" type="CurrencyType" minOccurs="1" maxOccurs="1"/>
      <!--
 Default Tax Definition related to the charge definition. See TaxDefinitionType. 
-->
      <xs:element name="TaxDefinition" type="TaxDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--
 
      This is the charge definition that is used to resell the current charge.
      If this is an Income charge the resell is an Expense charge and viceversa. 
      
-->
      <xs:element name="ResellCharge" type="ChargeDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--
 This is the preferred vendor. Only for expense charge types
-->
      <xs:element name="PreferredVendor" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--
 This is used for inventory types when buying items that are kept as an asset
-->
      <xs:element name="AssetAccount" type="AccountDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--
 
      This is used for inventory types. This is the item definition for a 
      part number that you buy with a Purchase Order. 
      
-->
      <xs:element name="ItemDefinition" type="ItemDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--
 Priority sorting order defines the order in which the charges will be generated and displayed.
				 This value ranges from 0 to 9. 0 means no priority and 1 is the highest priority.
				 This value does not apply to inventory charge types.
			
-->
      <xs:element name="PrioritySortingOrder" type="xs:byte" minOccurs="0" maxOccurs="1"/>
      <!--  IATA Code of the charge definition  -->
      <xs:element name="IATACode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Enforce 3rd party billing  -->
      <xs:element name="Enforce3rdPartyBilling" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Types of tax definitions  -->
  <xs:simpleType name="TaxDefType">
    <xs:restriction base="xs:string">
      <!--  Main tax type   -->
      <xs:enumeration value="Tax"/>
      <!--
 Tax used to withhold certain amount of collected taxes 
-->
      <xs:enumeration value="Retention"/>
      <!--  Tax calculated by an external system  -->
      <xs:enumeration value="FlatValue"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Types of tax definitions  -->
  <xs:simpleType name="TaxDefLayoutType">
    <xs:restriction base="xs:string">
      <!--  Simple tax layout   -->
      <xs:enumeration value="Simple"/>
      <!--  Tax used to group other taxes  -->
      <xs:enumeration value="TaxGroup"/>
      <!--  Tax amount depends on other tax definition(s)  -->
      <xs:enumeration value="Cascade"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Sales tax code definition  -->
  <xs:complexType name="TaxDefinitionType">
    <xs:all>
      <!--  Code for the tax definition. Ex: IVA  -->
      <xs:element name="Code" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--
 Type of charge definition such as Freight, Inventory, etc. 
-->
      <xs:element name="Type" type="TaxDefType" minOccurs="0" maxOccurs="1"/>
      <!--
 Type of charge definition such as Freight, Inventory, etc. 
-->
      <xs:element name="Layout" type="TaxDefLayoutType" minOccurs="0" maxOccurs="1"/>
      <!--  Name of the tax definition. Ex: IVA  -->
      <xs:element name="Name" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Percentage of the amount sold  -->
      <xs:element name="Rate" type="xs:double" minOccurs="0" maxOccurs="1"/>
      <!--  Entity to collect the sales tax  -->
      <xs:element name="TaxAuthority" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Minimum amount required to apply this tax  -->
      <xs:element name="MinimumAmount" type="MoneyValueEx" minOccurs="0" maxOccurs="1"/>
      <!--  Maximum amount required to apply this tax  -->
      <xs:element name="MaximumAmount" type="MoneyValueEx" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates the minimum amount applies to the total of taxable charges of the account item 
-->
      <xs:element name="MinimumAppliedToTaxableTotal" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 Indicates the minimum amount applies to the total of the account item 
-->
      <xs:element name="MinimumAppliedToInvoiceTotal" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Asset account  -->
      <xs:element name="AssetAccount" type="AccountDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--  Liability account  -->
      <xs:element name="LiabilityAccount" type="AccountDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--
 If the tax defines a group this field contains the list of tax definitions grouped 
-->
      <xs:element name="TaxDefinitions" type="TaxDefinitionList" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  List of sales tax code definitions  -->
  <xs:complexType name="TaxDefinitionList">
    <xs:sequence>
      <!--  Describes an individual tax definition in the list  -->
      <xs:element name="TaxDefinition" type="TaxDefinitionType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Types of charge definitions  -->
  <xs:simpleType name="ChargeDefType">
    <xs:restriction base="xs:string">
      <!--
 Main freight charge for a freight service. Ocean Freigh, Air Freight, ...  
-->
      <xs:enumeration value="Freight"/>
      <!--
 Charge calculated as a freight service. Fuel surcharge, Bunker surcharge, ... 
-->
      <xs:enumeration value="OtherFreight"/>
      <!--
 Applies to cargo valuation as it appears in the Air Waybill 
-->
      <xs:enumeration value="Valuation"/>
      <!--  Tax charge as it appears in the Air Waybill  -->
      <xs:enumeration value="Tax"/>
      <!--
 All other charges. Documentation, Storage, Insurance, Repacking, ... 
-->
      <xs:enumeration value="Other"/>
      <!--
 
      Charges used when buying (Bill to pay for Purchase Orders) or 
      selling products (Invoice to receive payment from Sales Orders) 
      
-->
      <xs:enumeration value="Inventory"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Represents a Payment Term  -->
  <xs:complexType name="PaymentTermType">
    <xs:all>
      <!--  Description of payment term  -->
      <xs:element name="Description" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Amount of days before the payment is due  -->
      <xs:element name="NetDueDays" type="xs:integer" minOccurs="1" maxOccurs="1"/>
      <!--
 Discount percentage if the payment is made by the discount days 
-->
      <xs:element name="DiscountPercentage" type="xs:double" minOccurs="0" maxOccurs="1"/>
      <!--
 Discount is applied if transaction is paid within the discount days 
-->
      <xs:element name="DiscountPaidDays" type="xs:integer" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Represents a Denied Party Screening Result Data  -->
  <xs:complexType name="DeniedPartyScreeningResultType">
    <xs:all>
      <!--  Last screening status  -->
      <xs:element name="ScreeningStatus" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Datetime of the last screening  -->
      <xs:element name="ScreeningTime" type="xs:dateTime" minOccurs="1" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  List of external tracking numbers.  -->
  <xs:complexType name="TrackingNumberInfoList">
    <xs:sequence>
      <!--
 Describes an individual tracking number in the list 
-->
      <xs:element name="TrackingNumberInfo" type="TrackingNumberInfoType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Represents a Tracking Number Info  -->
  <xs:complexType name="TrackingNumberInfoType">
    <xs:all>
      <!--  Tracking Number  -->
      <xs:element name="TrackingNumber" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Type of Tracking Number  -->
      <xs:element name="Type" type="xs:string" minOccurs="1" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Represents an entity  -->
  <xs:complexType name="EntityType">
    <xs:all>
      <!--  Type of entity such as Client, Carrier, ...  -->
      <xs:element name="Type" type="EntityTypeDesc" minOccurs="1" maxOccurs="1"/>
      <!--  Name of the entity  -->
      <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Code identifying the entity. Ex: MICRO21   -->
      <xs:element name="EntityID" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Creation date of the entity  -->
      <xs:element name="CreatedOn" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Shipping address of the entity  -->
      <xs:element name="Address" type="AddressType" minOccurs="0" maxOccurs="1"/>
      <!--  Billing address of the entity  -->
      <xs:element name="BillingAddress" type="AddressType" minOccurs="0" maxOccurs="1"/>
      <!--  Main email of the entity  -->
      <xs:element name="Email" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Website address of the entity  -->
      <xs:element name="Website" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Main phone of the entity  -->
      <xs:element name="Phone" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Main phone extension of the entity  -->
      <xs:element name="PhoneExtension" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Main fax of the entity  -->
      <xs:element name="Fax" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Entity account number  -->
      <xs:element name="AccountNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  First name of the main contact  -->
      <xs:element name="ContactFirstName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Last name of the main contact  -->
      <xs:element name="ContactLastName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Number that identifies the entity with the goverment. See ExporterIDTypeDesc 
-->
      <xs:element name="ExporterID" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 
      Describes the type of Exporter ID that identifies the entity with the goverment. 
      See ExporterIDTypeDesc.
      
-->
      <xs:element name="ExporterIDType" type="ExporterIDTypeDesc" minOccurs="0" maxOccurs="1"/>
      <!--  Magaya Network ID  -->
      <xs:element name="NetworkID" type="xs:long" minOccurs="0" maxOccurs="1"/>
      <!--  Notes about the entity  -->
      <xs:element name="Notes" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Credit limit in home currency of the entity  -->
      <xs:element name="CreditLimit" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Balance in home currency of the entity  -->
      <xs:element name="Balance" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Name of the parent entity  -->
      <xs:element name="ParentName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 Amount of days before the payment is due. 
           Backward compatibility. PaymentTerms has more detailed information 
-->
      <xs:element name="TransactionDueDays" type="xs:integer" minOccurs="0" maxOccurs="1"/>
      <!--  Payment terms of the entity  -->
      <xs:element name="PaymentTerms" type="PaymentTermType" minOccurs="0" maxOccurs="1"/>
      <!--  Indicates if the entity is a known shipper  -->
      <xs:element name="IsKnownShipper" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Indicates when the known shipper status expires  -->
      <xs:element name="KnownShipperExpirationDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--
 If this entity is a Forwarding Agent this field has agent specific information 
-->
      <xs:element name="AgentInfo" type="AgentType" minOccurs="0" maxOccurs="1"/>
      <!--
 If this entity is a carrier this field has carrier specific information 
-->
      <xs:element name="CarrierInfo" type="CarrierType" minOccurs="0" maxOccurs="1"/>
      <!--
 If this entity is a division this field has info about the division setup 
-->
      <xs:element name="DivisionInfo" type="DivisionType" minOccurs="0" maxOccurs="1"/>
      <!--  List of other addresses available for the entity  -->
      <xs:element name="OtherAddresses" type="AddressList" minOccurs="0" maxOccurs="1"/>
      <!--  Date of Birth  -->
      <xs:element name="DateOfBirth" type="xs:date" minOccurs="0" maxOccurs="1"/>
      <!--  Country of Citizenship  -->
      <xs:element name="CountryOfCitizenship" type="CountryType" minOccurs="0" maxOccurs="1"/>
      <!--  Division of this entity  -->
      <xs:element name="Division" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  If true this entity is inactive  -->
      <xs:element name="IsInactive" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Incoterm  -->
      <xs:element name="Incoterm" type="IncotermType" minOccurs="0" maxOccurs="1"/>
      <!--  Denied Party Screening Result Data  -->
      <xs:element name="DeniedPartyScreeningResultData" type="DeniedPartyScreeningResultType" minOccurs="0" maxOccurs="1"/>
      <!--
 true if the Entity is Prepaid, false if it is Collect 
-->
      <xs:element name="IsPrepaid" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  true if the Entity is 1099 Eligible  -->
      <xs:element name="Is1099Eligible" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Mobile phone of the entity  -->
      <xs:element name="MobilePhone" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <!--  Unique identifier (GUID) of the entity  -->
    <xs:attribute name="GUID" type="GUIDType" use="optional"/>
  </xs:complexType>
  <!--  List of addresses  -->
  <xs:complexType name="AddressList">
    <xs:sequence>
      <!--  Describes an individual address in the list  -->
      <xs:element name="Address" type="AddressType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Types of exporter IDs according to US Customs  -->
  <xs:simpleType name="ExporterIDTypeDesc">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Other"/>
      <!--  Employee Identification Number  -->
      <xs:enumeration value="EIN"/>
      <!--  Social Scurity Number  -->
      <xs:enumeration value="SSN"/>
      <!--  DUNS Number  -->
      <xs:enumeration value="DUNS"/>
      <!--  Foreign Number  -->
      <xs:enumeration value="Foreign"/>
      <!--  CNPJ  -->
      <xs:enumeration value="CNPJ"/>
      <!--  License  -->
      <xs:enumeration value="License"/>
      <!--  Passport  -->
      <xs:enumeration value="Passport"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Type of entities  -->
  <xs:simpleType name="EntityTypeDesc">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Client"/>
      <xs:enumeration value="WarehouseProvider"/>
      <xs:enumeration value="ForwardingAgent"/>
      <xs:enumeration value="Carrier"/>
      <xs:enumeration value="Vendor"/>
      <xs:enumeration value="Employee"/>
      <xs:enumeration value="Salesperson"/>
      <xs:enumeration value="Division"/>
      <xs:enumeration value="EntityContact"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Extra fields for a division  -->
  <xs:complexType name="DivisionType">
    <xs:all>
      <!--
 Use division information in headers of all documents that belong to this division 
-->
      <xs:element name="UseInHeaders" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Extra fields for a forwarding agent  -->
  <xs:complexType name="AgentType">
    <xs:all>
      <!--  IATA Number  -->
      <xs:element name="IATAAccountNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  FMC Number  -->
      <xs:element name="FMCNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  SCAC Number  -->
      <xs:element name="SCACNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  TSA Number  -->
      <xs:element name="TSANumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Extra fields for a carrier  -->
  <xs:complexType name="CarrierType">
    <xs:all>
      <!--  Type of carrier. Air, Ocean or Ground  -->
      <xs:element name="CarrierTypeCode" type="MethodType" minOccurs="1" maxOccurs="1"/>
      <!--  IATA Number  -->
      <xs:element name="IATAAccountNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Two or three letter Airline code  -->
      <xs:element name="AirlineCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Three-digit airline code  -->
      <xs:element name="AirlineCodeNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  FMC Number  -->
      <xs:element name="FMCNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  SCAC Number  -->
      <xs:element name="SCACNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Proof of Delivery information  -->
  <xs:complexType name="PODDataType">
    <xs:all>
      <!--  Delivery date and time  -->
      <xs:element name="DeliveryDate" type="xs:dateTime" minOccurs="1" maxOccurs="1"/>
      <!--  Entity that received the cargo  -->
      <xs:element name="ReceivedBy" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Name of the person that received the cargo  -->
      <xs:element name="ReceivedByName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Comments about the delivery  -->
      <xs:element name="Comments" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Signature bitmap encoded in base64 format  -->
      <xs:element name="SignatureImage" type="xs:base64Binary" minOccurs="0" maxOccurs="1"/>
      <!--
 Signature URL to show the signature when doing tracking 
-->
      <xs:element name="SignatureURL" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 
      Code that describes the type of operation where the POD signature is contained. Ex: SH for shipment. 
      This is useful to retrieve the POD signature when necessary 
      
-->
      <xs:element name="OwnerType" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 
      Unique identifier (GUID) of the operation where the POD signature is contained. 
      This is used to retrieve the POD signature when necessary 
      
-->
      <xs:element name="OwnerGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Item Definition element  -->
  <xs:element name="ItemDefinition" type="ItemDefinitionType"/>
  <!--  Item Definition list  -->
  <xs:element name="ItemDefinitions" type="ItemDefinitionList"/>
  <!--  Definition of an Item Definition list  -->
  <xs:complexType name="ItemDefinitionList">
    <xs:sequence>
      <!--
 Describes an individual item definition in the list 
-->
      <xs:element name="ItemDefinition" type="ItemDefinitionType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Definition of a GUID  -->
  <xs:simpleType name="GUIDType">
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Entity list  -->
  <xs:element name="Entities" type="EntityList"/>
  <!--
 Definition of an entity list. It may have different types of entities 
-->
  <xs:complexType name="EntityList">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Carrier" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="ForwardingAgent" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="WarehouseProvider" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Client" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Vendor" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Salesperson" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Employee" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
  </xs:complexType>
  <!--  Carrier list  -->
  <xs:element name="Carriers" type="CarrierList"/>
  <!--  Definition of a carrier list  -->
  <xs:complexType name="CarrierList">
    <xs:sequence>
      <!--  Describes an individual carrier in the list  -->
      <xs:element name="Carrier" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Forwarding Agent list  -->
  <xs:element name="ForwardingAgents" type="ForwardingAgentList"/>
  <!--  Definition of a Forwarding Agent list  -->
  <xs:complexType name="ForwardingAgentList">
    <xs:sequence>
      <!--
 Describes an individual forwarding agent in the list 
-->
      <xs:element name="ForwardingAgent" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Warehouse Provider list  -->
  <xs:element name="WarehouseProviders" type="WarehouseProviderList"/>
  <!--  Definition of a Warehouse Provider list  -->
  <xs:complexType name="WarehouseProviderList">
    <xs:sequence>
      <!--
 Describes an individual warehouse provider in the list 
-->
      <xs:element name="WarehouseProvider" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Defines a single entity element  -->
  <xs:element name="Entity" type="EntityType"/>
  <!--  Client list  -->
  <xs:element name="Clients" type="ClientList"/>
  <!--  Definition of a client list  -->
  <xs:complexType name="ClientList">
    <xs:sequence>
      <!--  Describes an individual client in the list  -->
      <xs:element name="Client" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Vendor list  -->
  <xs:element name="Vendors" type="VendorList"/>
  <!--  Definition of a vendor list  -->
  <xs:complexType name="VendorList">
    <xs:sequence>
      <!--  Describes an individual vendor in the list  -->
      <xs:element name="Vendor" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Salesperson list  -->
  <xs:element name="Salespersons" type="SalespersonList"/>
  <!--  Definition of a salesperson list  -->
  <xs:complexType name="SalespersonList">
    <xs:sequence>
      <!--  Describes an individual salesperson in the list  -->
      <xs:element name="Salesperson" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Employee list  -->
  <xs:element name="Employees" type="EmployeeList"/>
  <!--  Definition of an employee list  -->
  <xs:complexType name="EmployeeList">
    <xs:sequence>
      <!--  Describes an individual employee in the list  -->
      <xs:element name="Employee" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Charge Definition list  -->
  <xs:element name="ChargeDefinitions" type="ChargeDefinitionList"/>
  <!--  Definition of a charge definition list  -->
  <xs:complexType name="ChargeDefinitionList">
    <xs:sequence>
      <!--
 Describes an individual charge definition in the list 
-->
      <xs:element name="ChargeDefinition" type="ChargeDefinitionType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Definition of a location element  -->
  <xs:element name="Location" type="LocationType"/>
  <!--  Location list  -->
  <xs:element name="Locations" type="LocationList"/>
  <!--  Definition of a location list  -->
  <xs:complexType name="LocationList">
    <xs:sequence>
      <!--  Describes an individual location in the list  -->
      <xs:element name="Location" type="LocationType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Account definition list  -->
  <xs:element name="AccountDefinitions" type="AccountDefinitionList"/>
  <!--  Definition of an account definition list  -->
  <xs:complexType name="AccountDefinitionList">
    <xs:sequence>
      <!--
 Describes an individual account definition in the list 
-->
      <xs:element name="AccountDefinition" type="AccountDefinitionType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Measurement units used in a transaction  -->
  <xs:complexType name="MeasurementUnitsType">
    <xs:all>
      <!--  Length unit  -->
      <xs:element name="LengthUnit" type="LengthUnitType" minOccurs="0" maxOccurs="1"/>
      <!--  Volume unit  -->
      <xs:element name="VolumeUnit" type="VolumeUnitType" minOccurs="0" maxOccurs="1"/>
      <!--  Weight unit  -->
      <xs:element name="WeightUnit" type="WeightUnitType" minOccurs="0" maxOccurs="1"/>
      <!--  Volume Weight unit  -->
      <xs:element name="VolumeWeightUnit" type="VolumeWeightUnitType" minOccurs="0" maxOccurs="1"/>
      <!--  Area unit  -->
      <xs:element name="AreaUnit" type="AreaUnitType" minOccurs="0" maxOccurs="1"/>
      <!--  Length precision  -->
      <xs:element name="LengthPrecision" type="xs:byte" minOccurs="0" maxOccurs="1"/>
      <!--  Volume precision  -->
      <xs:element name="VolumePrecision" type="xs:byte" minOccurs="0" maxOccurs="1"/>
      <!--  Weight precision  -->
      <xs:element name="WeightPrecision" type="xs:byte" minOccurs="0" maxOccurs="1"/>
      <!--  Volume Weight precision  -->
      <xs:element name="VolumeWeightPrecision" type="xs:byte" minOccurs="0" maxOccurs="1"/>
      <!--  Area precision  -->
      <xs:element name="AreaPrecision" type="xs:byte" minOccurs="0" maxOccurs="1"/>
      <!--
 Volume Weight conversion factor expressed in in3/lb. Default is 1.00 which is equivalent to 166 in3/lb 
-->
      <xs:element name="VolumeWeightFactor" type="xs:double" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Defines a rate  -->
  <xs:complexType name="RateType">
    <xs:all>
      <!--  Type of rate. See RateTypeDesc below  -->
      <xs:element name="Type" type="RateTypeDesc" minOccurs="1" maxOccurs="1"/>
      <!--  Description/Commodity of the rate  -->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Type of commodity  -->
      <xs:element name="CommodityType" type="CommodityTypeType" minOccurs="0" maxOccurs="1"/>
      <!--  Service whose price is calculated using this rate  -->
      <xs:element name="ChargeDefinition" type="ChargeDefinitionType" minOccurs="1" maxOccurs="1"/>
      <!--  Type of service  -->
      <xs:element name="Service" type="ServiceType" minOccurs="0" maxOccurs="1"/>
      <!--  Origin Country  -->
      <xs:element name="OriginCountry" type="CountryType" minOccurs="0" maxOccurs="1"/>
      <!--  Destination Country  -->
      <xs:element name="DestinationCountry" type="CountryType" minOccurs="0" maxOccurs="1"/>
      <!--  Port of origin  -->
      <xs:element name="OriginPort" type="PortType" minOccurs="0" maxOccurs="1"/>
      <!--  Port of destination  -->
      <xs:element name="DestinationPort" type="PortType" minOccurs="0" maxOccurs="1"/>
      <!--  Port of Receipt  -->
      <xs:element name="ReceiptPort" type="PortType" minOccurs="0" maxOccurs="1"/>
      <!--  Port of Delivery  -->
      <xs:element name="DeliveryPort" type="PortType" minOccurs="0" maxOccurs="1"/>
      <!--  Mode of transportation  -->
      <xs:element name="ModeOfTransportation" type="ModeOfTransportationType" minOccurs="1" maxOccurs="1"/>
      <!--  Minimun value  -->
      <xs:element name="Minimum" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Maximum value  -->
      <xs:element name="Maximum" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Calculate price by weight, volume, pieces, ...  -->
      <xs:element name="ApplyBy" type="ApplyByType" minOccurs="1" maxOccurs="1"/>
      <!--  Weight unit  -->
      <xs:element name="WeightUnit" type="WeightUnitType" minOccurs="0" maxOccurs="1"/>
      <!--  Volume unit  -->
      <xs:element name="VolumeUnit" type="VolumeUnitType" minOccurs="0" maxOccurs="1"/>
      <!--  Entity to whom this rate is applied  -->
      <xs:element name="Entity" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Carrier for Standard rate or Client Rate  -->
      <xs:element name="Carrier" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--

	   If TRUE it means that the price for range rates is for the range not per unit.
	   Example: $50 from 1 lb to 200 lb, $40 for more than 200 lb
	  
-->
      <xs:element name="PricePerRange" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--

      The rate multiple is used for range rates to express the rate in terms of a multiple of the unit.
	  Example: range rate could be expressed in $20 per 100 lb instead of the default $20 per 1 lb. 
	  In this case the multiple will be 100 lb.
	  RateMultiple must be expressed in the WeightUnit or VolumeUnit of this rate		
	  
-->
      <xs:element name="RateMultiple" type="xs:double" minOccurs="0" maxOccurs="1"/>
      <!--  Notes for the rate  -->
      <xs:element name="Notes" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 If the price is calculated by pieces this field has the details 
-->
      <xs:element name="PieceRates" type="RangeRatesType" minOccurs="0" maxOccurs="1"/>
      <!--
 If the price is calculated by weight this field has the details 
-->
      <xs:element name="WeightRates" type="RangeRatesType" minOccurs="0" maxOccurs="1"/>
      <!--
 If the price is calculated by volume this field has the details 
-->
      <xs:element name="VolumeRates" type="RangeRatesType" minOccurs="0" maxOccurs="1"/>
      <!--
 If the price is calculated by package this field has the details 
-->
      <xs:element name="PackageRates" type="PackageRatesType" minOccurs="0" maxOccurs="1"/>
      <!--
 This field is used if the price is calculated with a formula 
-->
      <xs:element name="FormulaRate" type="FormulaRateType" minOccurs="0" maxOccurs="1"/>
      <!--  Frequency for this rate  -->
      <xs:element name="Frequency" type="FrequencyType" minOccurs="0" maxOccurs="1"/>
      <!--  Creation date of the rate  -->
      <xs:element name="CreatedOn" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Expiration date for this rate  -->
      <xs:element name="ExpirationDate" type="xs:date" minOccurs="0" maxOccurs="1"/>
      <!--  Effective date for this rate  -->
      <xs:element name="EffectiveDate" type="xs:date" minOccurs="0" maxOccurs="1"/>
      <!--  Contract number for this rate  -->
      <xs:element name="ContractNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Contract amendment number for this rate  -->
      <xs:element name="ContractAmendmentNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
      <!--
 Quantity of time (in days) required to transport from Origen to Destine with this Rate
				 Can be a fraction, example: 1.5 days 
-->
      <xs:element name="TransitTime" type="xs:double" minOccurs="0" maxOccurs="1"/>
      <!--  Use Gross Weight instead of Chargeable Weight  -->
      <xs:element name="UseGrossWeight" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Is Hazardous Commodity  -->
      <xs:element name="IsHazardous" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Is Automatic Create Charge  -->
      <xs:element name="IsAutomaticCreateCharge" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <!--  Unique identifier (GUID) of the rate  -->
    <xs:attribute name="GUID" type="GUIDType" use="optional"/>
  </xs:complexType>
  <!--  Types of rates  -->
  <xs:simpleType name="RateTypeDesc">
    <xs:restriction base="xs:string">
      <!--
 Standard rate. Public rates (tariff) of the company. 
-->
      <xs:enumeration value="Standard"/>
      <!--  Rate customized for a client  -->
      <xs:enumeration value="Client"/>
      <!--  Rate given by a carrier  -->
      <xs:enumeration value="Carrier"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  How the rate will be applied  -->
  <xs:simpleType name="ApplyByType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Pieces"/>
      <xs:enumeration value="Weight"/>
      <xs:enumeration value="Volume"/>
      <xs:enumeration value="Package"/>
      <xs:enumeration value="Formula"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Types of services  -->
  <xs:simpleType name="ServiceType">
    <xs:restriction base="xs:string">
      <!--  Undefined  -->
      <xs:enumeration value="Undefined"/>
      <!--  Door To Door  -->
      <xs:enumeration value="DoorToDoor"/>
      <!--  Door To Port  -->
      <xs:enumeration value="DoorToPort"/>
      <!--  Port To Port  -->
      <xs:enumeration value="PortToPort"/>
      <!--  Port To Door  -->
      <xs:enumeration value="PortToDoor"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Frequency of rates  -->
  <xs:simpleType name="FrequencyType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Daily"/>
      <xs:enumeration value="Weekly"/>
      <xs:enumeration value="Biweekly"/>
      <xs:enumeration value="Monthly"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Range to calculate a rate  -->
  <xs:complexType name="RangeRateType">
    <xs:all>
      <!--
 Start of the range. End of the range is the start of the next range in the list 
-->
      <xs:element name="MoreThan" type="xs:double" minOccurs="1" maxOccurs="1"/>
      <!--
 Unitary price for this range. It could be the price of the entire range if PricePerRange is TRUE 
-->
      <xs:element name="Price" type="MoneyValue" minOccurs="1" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  List of rate ranges  -->
  <xs:complexType name="RangeRatesType">
    <xs:sequence>
      <!--  Describes an individual range rate in the list  -->
      <xs:element name="RangeRate" type="RangeRateType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Rate by package  -->
  <xs:complexType name="PackageRateType">
    <xs:all>
      <!--  Package type  -->
      <xs:element name="Package" type="PackageType" minOccurs="1" maxOccurs="1"/>
      <!--  Price of that package  -->
      <xs:element name="Price" type="MoneyValue" minOccurs="1" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  List of rates by packages  -->
  <xs:complexType name="PackageRatesType">
    <xs:sequence>
      <!--  Describes an individual package rate in the list  -->
      <xs:element name="PackageRate" type="PackageRateType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Rate by formula  -->
  <xs:complexType name="FormulaType">
    <xs:all>
      <xs:element name="UseScript" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Text describing the formula  -->
      <xs:element name="Text" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Weight unit used in the formula  -->
      <xs:element name="WeightUnit" type="WeightUnitType" minOccurs="0" maxOccurs="1"/>
      <!--  Volume unit used in the formula  -->
      <xs:element name="VolumeUnit" type="VolumeUnitType" minOccurs="0" maxOccurs="1"/>
      <!--  Volume Weight unit used in the formula  -->
      <xs:element name="VolumeWeightUnit" type="VolumeWeightUnitType" minOccurs="0" maxOccurs="1"/>
      <!--  Time unit used in the formula  -->
      <xs:element name="TimeUnit" type="TimeUnitType" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Rate calculated using a formula  -->
  <xs:complexType name="FormulaRateType">
    <xs:all>
      <!--  Reference to the formula  -->
      <xs:element name="Formula" type="FormulaType" minOccurs="1" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Standard rate list  -->
  <xs:element name="StandardRates" type="RateList"/>
  <!--  Client rate list  -->
  <xs:element name="ClientRates" type="RateList"/>
  <!--  Carrier rate list  -->
  <xs:element name="CarrierRates" type="RateList"/>
  <!--  Defines a single Rate element  -->
  <xs:element name="Rate" type="RateType"/>
  <!--  Defines a rate list  -->
  <xs:complexType name="RateList">
    <xs:sequence>
      <!--  Describes an individual rate in the list  -->
      <xs:element name="Rate" type="RateType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Item list  -->
  <xs:element name="Items" type="ItemList"/>
  <!--  Language types  -->
  <xs:simpleType name="LanguageType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="English"/>
      <xs:enumeration value="Spanish"/>
      <xs:enumeration value="Portuguese"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
 Methods of transportation used to categorize equipments, ports, etc.
-->
  <xs:complexType name="MethodList">
    <xs:sequence>
      <!--  Describes an individual method in the list  -->
      <xs:element name="Method" type="MethodType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Defines a package list  -->
  <xs:complexType name="PackageList">
    <xs:sequence>
      <!--  Describes an individual package in the list  -->
      <xs:element name="Package" type="PackageType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Package type list  -->
  <xs:element name="PackageTypes" type="PackageList"/>
  <!--
Equipment types are used when retrieving package types that are containers when submitting online bookings
-->
  <xs:element name="EquipmentTypes" type="PackageList"/>
  <!--  Definition of a custom field  -->
  <xs:complexType name="CustomFieldDefinitionType">
    <xs:all>
      <!--  Type of this field  -->
      <xs:element name="Type" type="CustomFieldDefType" minOccurs="1" maxOccurs="1"/>
      <!--
 Internal name that uniquely identifies this field. It is used when creating template documents. 
-->
      <xs:element name="InternalName" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--
 Name that will be displayed to the user wherever this field is shown 
-->
      <xs:element name="DisplayName" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--
 Detailed description of what this field is used for 
-->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Category used to group the field  -->
      <xs:element name="Category" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 If InternalUse is true it means that this field will never be displayed to the customer 
-->
      <xs:element name="InternalUse" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 If BuildReports is true it means that this field can be used to build reports 
-->
      <xs:element name="BuildReports" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Field is inactive  -->
      <xs:element name="Inactive" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Default Custom Field Value  -->
      <xs:element name="DefaultValue" type="CustomFieldDefaultValueType" minOccurs="0" maxOccurs="1"/>
      <!--
 If DateTimeFormat is true it means that date fields will require time as well
-->
      <xs:element name="DateTimeFormat" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Maximum length of a text field type  -->
      <xs:element name="MaximumLength" type="xs:long" minOccurs="0" maxOccurs="1"/>
      <!--  Precision of a decimal/money field type  -->
      <xs:element name="Precision" type="xs:byte" minOccurs="0" maxOccurs="1"/>
      <!--  List of possible options for a PickList field type  -->
      <xs:element name="PickItems" type="PickListType" minOccurs="0" maxOccurs="1"/>
      <!--  List of possible options for a Lookup field type  -->
      <xs:element name="LookupItems" type="LookupListType" minOccurs="0" maxOccurs="1"/>
      <!--  Field is multiline text  -->
      <xs:element name="IsMultiline" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Field is calculated  -->
      <xs:element name="IsCalculated" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--
 Code of the function used to calculate the value of the field 
-->
      <xs:element name="Code" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 If DateSystemTime is true it means that it could accept date prior 1/1/1970
-->
      <xs:element name="DateSystemTime" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Field is ReadOnly. Writable only via API.  -->
      <xs:element name="IsReadOnly" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  List of possible options for a PickList field type  -->
  <xs:complexType name="PickListType">
    <xs:sequence>
      <!--  Describes an individual pick item in the list  -->
      <xs:element name="PickItem" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--
 List of possible options for a Lookup field type
       Right now we can only select entities 
-->
  <xs:complexType name="LookupListType">
    <xs:sequence>
      <!--  Describes an individual lookup item in the list  -->
      <xs:element name="LookupItem" type="EntityTypeDesc" minOccurs="0" maxOccurs="8"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Types of custom fields  -->
  <xs:simpleType name="CustomFieldDefType">
    <xs:restriction base="xs:string">
      <!--  Text type  -->
      <xs:enumeration value="Text"/>
      <!--  Integer number type  -->
      <xs:enumeration value="Integer"/>
      <!--  Decimal number type  -->
      <xs:enumeration value="Decimal"/>
      <!--  Pick List type  -->
      <xs:enumeration value="PickList"/>
      <!--  Boolean type, yes or no  -->
      <xs:enumeration value="Logical"/>
      <!--  Date type -->
      <xs:enumeration value="Date"/>
      <!--  Money type -->
      <xs:enumeration value="Money"/>
      <!--  Lookup type -->
      <xs:enumeration value="Lookup"/>
      <!--  Lookup and Address type -->
      <xs:enumeration value="LookupAddress"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  List of custom fields  -->
  <xs:complexType name="CustomFieldList">
    <xs:sequence>
      <!--  Describes an individual custom field in the list  -->
      <xs:element name="CustomField" type="CustomFieldType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  List of custom field definitions  -->
  <xs:complexType name="CustomFieldDefinitionList">
    <xs:sequence>
      <!--
 Describes an individual custom field definition in the list 
-->
      <xs:element name="CustomFieldDefinition" type="CustomFieldDefinitionType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="CustomFieldDefinitions" type="CustomFieldDefinitionList"/>
  <!--  Defines the instance of a custom field  -->
  <xs:complexType name="CustomFieldType">
    <xs:all>
      <!--
 Definition of the custom field. See CustomFieldDefinitionType. 
-->
      <xs:element name="CustomFieldDefinition" type="CustomFieldDefinitionType" minOccurs="1" maxOccurs="1"/>
      <!--
 Value of the custom field. 
           Integer/Decimal type is converted to string
           Money type is converted to string ex: 125.67 USD
           Boolean type is converted to string (no, yes).
           Date type is converted to XML date format ex: 2006-10-10T08:34:05-05:00 or 2006-10-10T08:34:05Z (datetime)
                                                         2006-10-10-05:00 or 2006-10-10Z (date only)               
           
-->
      <xs:element name="Value" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--
 Related object for lookup custom fields such as (Entity, etc.) 
-->
      <xs:element name="RelatedObject" type="CustomFieldObjectType" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Defines the instance of a custom field  -->
  <xs:complexType name="CustomFieldDefaultValueType">
    <xs:all>
      <!--
 Definition of the custom field. See CustomFieldDefinitionType. 
-->
      <xs:element name="CustomFieldDefinition" type="CustomFieldDefinitionType" minOccurs="0" maxOccurs="1"/>
      <!--
 Value of the custom field. 
           Integer/Decimal type is converted to string
           Money type is converted to string ex: 125.67 USD
           Boolean type is converted to string (no, yes).
           Date type is converted to XML date format ex: 2006-10-10T08:34:05-05:00 or 2006-10-10T08:34:05Z (datetime)
                                                         2006-10-10-05:00 or 2006-10-10Z (date only)               
           
-->
      <xs:element name="Value" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--
 Related object for lookup custom fields such as (Entity, etc.) 
-->
      <xs:element name="RelatedObject" type="CustomFieldObjectType" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--
 Structure that describes a related object of a custom field. Now it could be an entity. 
-->
  <xs:complexType name="CustomFieldObjectType">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element name="Entity" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Address of the entity  -->
      <xs:element name="EntityAddress" type="EntityAddressType" minOccurs="0" maxOccurs="1"/>
    </xs:choice>
  </xs:complexType>
  <!--
 Defines a list of transactions by their GUID and types 
-->
  <xs:complexType name="GUIDItemList">
    <xs:sequence>
      <!--  Describes an individual guid item in the list  -->
      <xs:element name="GUIDItem" type="GUIDItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Defines the GUID entry item of a GUID item list  -->
  <xs:complexType name="GUIDItemType">
    <xs:all>
      <!--  Unique identifier (GUID) of the transaction  -->
      <xs:element name="GUID" type="GUIDType" minOccurs="1" maxOccurs="1"/>
      <!--  Type of transaction. See TransactionType.  -->
      <xs:element name="Type" type="TransactionType" minOccurs="1" maxOccurs="1"/>
      <!--  Number of the transaction.  -->
      <xs:element name="Number" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--
 Definition of all possible transactions to be included in a GUID list
-->
  <xs:simpleType name="TransactionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PickupOrder"/>
      <xs:enumeration value="WarehouseReceipt"/>
      <xs:enumeration value="CargoRelease"/>
      <xs:enumeration value="AirShipment"/>
      <xs:enumeration value="OceanShipment"/>
      <xs:enumeration value="GroundShipment"/>
      <xs:enumeration value="Invoice"/>
      <xs:enumeration value="CreditMemo"/>
      <xs:enumeration value="Bill"/>
      <xs:enumeration value="BillCredit"/>
      <xs:enumeration value="Quotation"/>
      <xs:enumeration value="AirBooking"/>
      <xs:enumeration value="OceanBooking"/>
      <xs:enumeration value="GroundBooking"/>
      <xs:enumeration value="AirTrip"/>
      <xs:enumeration value="OceanTrip"/>
      <xs:enumeration value="GroundTrip"/>
      <xs:enumeration value="Job"/>
      <xs:enumeration value="PurchaseOrder"/>
      <xs:enumeration value="SalesOrder"/>
      <xs:enumeration value="CargoTask"/>
      <xs:enumeration value="Payment"/>
      <xs:enumeration value="RefundPayment"/>
      <xs:enumeration value="Deposit"/>
      <xs:enumeration value="Check"/>
      <xs:enumeration value="JournalEntry"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
 Defines a list of transactions by their GUID and types 
-->
  <xs:element name="GUIDItems" type="GUIDItemList"/>
  <!--  List of currencies  -->
  <xs:element name="Currencies" type="CurrencyList"/>
  <xs:complexType name="CurrencyList">
    <xs:sequence>
      <!--  Describes an individual currency in the list  -->
      <xs:element name="Currency" type="CurrencyType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Definition of a clause  -->
  <xs:complexType name="ClauseType">
    <xs:all>
      <!--  Name of the clause  -->
      <xs:element name="Name" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Description of the clause  -->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Category name  -->
      <xs:element name="CategoryName" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Clause element  -->
  <xs:element name="Clause" type="ClauseType"/>
  <!--  Clause list  -->
  <xs:complexType name="ClauseList">
    <xs:sequence>
      <!--  Describes an individual clause in the list  -->
      <xs:element name="Clause" type="ClauseType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Clauses  -->
  <xs:element name="Clauses" type="ClauseList"/>
  <!--  Definition of a client custom charge  -->
  <xs:complexType name="CustomChargeDefinitionType">
    <xs:all>
      <!--
 Reference to the charge definition related to this charge. See ChargeDefinitionType. 
-->
      <xs:element name="ChargeDefinition" type="ChargeDefinitionType" minOccurs="1" maxOccurs="1"/>
      <!--
 Overwritten amount of the custom charge in the charge definition currency 
-->
      <xs:element name="Amount" type="MoneyValue" minOccurs="1" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Custom Charge Definition list  -->
  <xs:element name="CustomChargeDefinitions" type="CustomChargeDefinitionList"/>
  <!--  Definition of a custom charge definition list  -->
  <xs:complexType name="CustomChargeDefinitionList">
    <xs:sequence>
      <!--
 Describes an individual custom charge definition in the list 
-->
      <xs:element name="CustomChargeDefinition" type="CustomChargeDefinitionType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Entity contact list  -->
  <xs:element name="EntityContacts" type="EntityContactList"/>
  <!--  Definition of an entity contact list  -->
  <xs:complexType name="EntityContactList">
    <xs:sequence>
      <!--  Describes an individual entity contact in the list  -->
      <xs:element name="EntityContact" type="EntityType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Type of entity roles  -->
  <xs:simpleType name="EntityRoleDesc">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Manufacturer"/>
      <xs:enumeration value="SellingParty"/>
      <xs:enumeration value="BuyingParty"/>
      <xs:enumeration value="ShipToParty"/>
      <xs:enumeration value="StuffingLocation"/>
      <xs:enumeration value="Consolidator"/>
      <xs:enumeration value="BookingParty"/>
      <xs:enumeration value="Consignee"/>
      <xs:enumeration value="ImporterOfRecord"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Entity role list  -->
  <xs:element name="EntityRoles" type="EntityRoleList"/>
  <!--  Definition of the entity role list  -->
  <xs:complexType name="EntityRoleList">
    <xs:sequence>
      <!--  Describes an individual entity role in the list  -->
      <xs:element name="EntityRole" type="EntityRoleType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Definition of an Entity Role  -->
  <xs:complexType name="EntityRoleType">
    <xs:all>
      <!--  Entity associated with the role  -->
      <xs:element name="Entity" type="EntityType" minOccurs="1" maxOccurs="1"/>
    </xs:all>
    <!--  Role of the entity  -->
    <xs:attribute name="Role" type="EntityRoleDesc" use="required"/>
  </xs:complexType>
  <!--  Definition of a Item Definition Category  -->
  <xs:complexType name="ItemDefCategoryType">
    <xs:all>
      <!--  Name of the category  -->
      <xs:element name="Name" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Description of the category   -->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Subcategories  -->
      <xs:element name="Subcategories" type="ItemDefCategoryList" minOccurs="0" maxOccurs="1"/>
      <!--  Unique identifier of the parent category  -->
      <xs:element name="ParentCategoryGUID" type="GUIDType" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <!--  Unique identifier (GUID) of this Category  -->
    <xs:attribute name="GUID" type="GUIDType" use="optional"/>
  </xs:complexType>
  <!--  Item Definition Category element  -->
  <xs:element name="ItemDefCategory" type="ItemDefCategoryType"/>
  <!--  Subcategories  -->
  <xs:complexType name="ItemDefCategoryList">
    <xs:sequence>
      <!--  Describes an individual subcategory in the list  -->
      <xs:element name="ItemDefCategory" type="ItemDefCategoryType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Item Definition Category list  -->
  <xs:element name="ItemDefCategories" type="ItemDefCategoryList"/>
  <!--  Type of tracking user permissions  -->
  <xs:simpleType name="RemoteUserPermissionDesc">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TrackPickupOrders"/>
      <xs:enumeration value="TrackWarehouseReceipts"/>
      <xs:enumeration value="TrackCargoReleases"/>
      <xs:enumeration value="TrackInventoryItems"/>
      <xs:enumeration value="TrackInvoices"/>
      <xs:enumeration value="TrackShipments"/>
      <xs:enumeration value="AllowChat"/>
      <xs:enumeration value="TrackBookings"/>
      <xs:enumeration value="TrackQuotations"/>
      <xs:enumeration value="TrackJobs"/>
      <xs:enumeration value="TrackPurchaseOrders"/>
      <xs:enumeration value="TrackSalesOrders"/>
      <xs:enumeration value="SendOnlineBookings"/>
      <xs:enumeration value="QueryRates"/>
      <xs:enumeration value="SendOnlineSalesOrder"/>
      <xs:enumeration value="SendOnlineShippingInstructions"/>
      <xs:enumeration value="ApproveDisputeInvoice"/>
      <xs:enumeration value="SendOnlinePayment"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Definition of the tracking user permission list  -->
  <xs:complexType name="RemoteUserPermissionList">
    <xs:sequence>
      <!--
 Describes an individual tracking user permission in the list 
-->
      <xs:element name="Permission" type="RemoteUserPermissionDesc" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Definition of an Tracking user Role  -->
  <xs:complexType name="RemoteUserType">
    <xs:all>
      <!--  Name of the tracking user  -->
      <xs:element name="UserName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Password of the tracking user   -->
      <xs:element name="Password" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Initial status of the tracking user   -->
      <xs:element name="CreateDisabled" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Permissions associated with the tracking user  -->
      <xs:element name="PermissionList" type="RemoteUserPermissionList" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Definition of the tracking user list  -->
  <xs:complexType name="RemoteUserList">
    <xs:sequence>
      <!--
 Describes an individual tracking user permission in the list 
-->
      <xs:element name="RemoteUser" type="RemoteUserType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Tracking user list  -->
  <xs:element name="RemoteUsers" type="RemoteUserList"/>
  <!--  Tracking user  -->
  <xs:element name="RemoteUser" type="RemoteUserType"/>
  <xs:complexType name="RouteSegmentType">
    <xs:all>
      <!--  Carrier  -->
      <xs:element name="Carrier" type="EntityType" minOccurs="1" maxOccurs="1"/>
      <!--  Mode of transportation  -->
      <xs:element name="ModeOfTransportation" type="ModeOfTransportationType" minOccurs="1" maxOccurs="1"/>
      <!--  Point of origin  -->
      <xs:element name="PointOfOrigin" type="PortType" minOccurs="1" maxOccurs="1"/>
      <!--  Point of destination  -->
      <xs:element name="PointOfDestination" type="PortType" minOccurs="1" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Definition of a route segment list  -->
  <xs:complexType name="RouteSegmentList">
    <xs:sequence>
      <!--  Describes an individual route segment in the list  -->
      <xs:element name="RouteSegment" type="RouteSegmentType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--
 Defines the Hold Status (used in WHItems and WHReceipts) 
-->
  <xs:complexType name="HoldStatusType">
    <xs:all>
      <!--  Indicates if this object is on hold or not  -->
      <xs:element name="IsOnHold" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
      <!--  Reason why this object is on hold  -->
      <xs:element name="HoldReason" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Definition of an Incoterm  -->
  <xs:complexType name="IncotermType">
    <xs:all>
      <!--  Code of the Incoterm  -->
      <xs:element name="Code" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Description of the Incoterm  -->
      <xs:element name="Description" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Definition of an Attachment -->
  <xs:element name="Attachment" type="AttachmentType"/>
  <!--
 Enumerated value that defines a Service Type of ExpressLink 
-->
  <xs:simpleType name="ExpressLinkStatusType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Canceled"/>
      <xs:enumeration value="Delivered"/>
      <xs:enumeration value="Exception"/>
      <xs:enumeration value="Failed"/>
      <xs:enumeration value="Pending"/>
      <xs:enumeration value="Requested"/>
      <xs:enumeration value="InTransit"/>
      <xs:enumeration value="PickedUp"/>
      <xs:enumeration value="ReturnedToShipper"/>
      <xs:enumeration value="FirstAttempt"/>
      <xs:enumeration value="SecondAttempt"/>
      <xs:enumeration value="ThirdAttempt"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Definition of Express Link Information Type  -->
  <xs:complexType name="ExpressLinkInfoType">
    <xs:all>
      <!--  Courier name  -->
      <xs:element name="CourierName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Cost in home currency  -->
      <xs:element name="Cost" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Tracking Number  -->
      <xs:element name="TrackingNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Tracking Link  -->
      <xs:element name="TrackingLink" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Service Type  -->
      <xs:element name="ServiceType" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Payor name  -->
      <xs:element name="PayorName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Status  -->
      <xs:element name="Status" type="ExpressLinkStatusType" minOccurs="1" maxOccurs="1"/>
      <!--  Return (true/false)  -->
      <xs:element name="Return" type="xs:boolean" minOccurs="0" maxOccurs="1" default="false"/>
      <!--  Date and time when the event ocurred  -->
      <xs:element name="Date" type="xs:dateTime" minOccurs="1" maxOccurs="1"/>
      <!--  Date and time when it was delivered  -->
      <xs:element name="DeliveryDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Date and time when the event ocurred  -->
      <xs:element name="EstimatedDeliveryDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Date and time when the event ocurred  -->
      <xs:element name="EstimatedPickupDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <!--  Defines a Commodity Type   -->
  <xs:complexType name="CommodityTypeType">
    <xs:all>
      <!--  Description of the commodity type  -->
      <xs:element name="Description" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <!--  Code of the Commodity Type  -->
    <xs:attribute name="Code" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="BOMItemType">
    <xs:all>
      <xs:element name="ItemDefinitionGUID" type="GUIDType" minOccurs="1" maxOccurs="1"/>
      <xs:element name="Quantity" type="xs:integer" minOccurs="1" maxOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="CategoryRefType">
    <xs:attribute name="GUID" type="GUIDType"/>
  </xs:complexType>
  <!--  Defines a Bill of Material   -->
  <xs:complexType name="BillOfMaterialList">
    <xs:sequence>
      <!--  Describes a bill of material in the list  -->
      <xs:element name="BOMItem" type="BOMItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <!--  Defines a List of References to Categories   -->
  <xs:complexType name="CategoriesRefList">
    <xs:sequence>
      <!--  Describes a reference to a Category  -->
      <xs:element name="CategoryRef" type="CategoryRefType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!--  Definition of a Warehouse Receipt  -->
  <xs:complexType name="WarehouseReceiptType">
    <xs:all>
      <!--  Creation date for the Warehouse Receipt  -->
      <xs:element name="CreatedOn" type="xs:dateTime" minOccurs="1" maxOccurs="1"/>
      <!--  Warehouse Receipt number  -->
      <xs:element name="Number" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <!--  Employee that created the Warehouse Receipt  -->
      <xs:element name="CreatedByName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Version of the Warehouse Receipt  -->
      <xs:element name="Version" type="xs:byte" minOccurs="0" maxOccurs="1"/>
      <!--  Status of the Warehouse Receipt  -->
      <xs:element name="Status" type="WHRStatusType" minOccurs="0" maxOccurs="1"/>
      <!--
 Mode of transportation if the cargo in going to be moved 
-->
      <xs:element name="ModeOfTransportation" type="ModeOfTransportationType" minOccurs="0" maxOccurs="1"/>
      <!--
 Mode of transportation code if the cargo in going to be moved 
-->
      <xs:element name="ModeOfTransportCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Company that issued the Warehouse Receipt  -->
      <xs:element name="IssuedBy" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--
 Address of the company that issued the Warehouse Receipt 
-->
      <xs:element name="IssuedByAddress" type="AddressType" minOccurs="0" maxOccurs="1"/>
      <!--
 Name of the company that issued the Warehouse Receipt 
-->
      <xs:element name="IssuedByName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Shipper name  -->
      <xs:element name="ShipperName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Shipper address  -->
      <xs:element name="ShipperAddress" type="AddressType" minOccurs="0" maxOccurs="1"/>
      <!--  Shipper entity  -->
      <xs:element name="Shipper" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Consignee name  -->
      <xs:element name="ConsigneeName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Consignee address  -->
      <xs:element name="ConsigneeAddress" type="AddressType" minOccurs="0" maxOccurs="1"/>
      <!--  Consignee entity  -->
      <xs:element name="Consignee" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Destination agent name in case of export  -->
      <xs:element name="DestinationAgentName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Destination agent entity in case of export  -->
      <xs:element name="DestinationAgent" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Inland carrier entity  -->
      <xs:element name="Carrier" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Inland carrier name  -->
      <xs:element name="CarrierName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Inland carrier tracking number  -->
      <xs:element name="CarrierTrackingNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Inland carrier PRO number  -->
      <xs:element name="CarrierPRONumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Inland carrier driver name  -->
      <xs:element name="DriverName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Inland carrier driver license  -->
      <xs:element name="DriverLicenseNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Notes  -->
      <xs:element name="Notes" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Merchandise received in this Warehouse Receipt  -->
      <xs:element name="Items" type="ItemList" minOccurs="0" maxOccurs="1"/>
      <!--  Measurement units used in this Warehouse Receipt  -->
      <xs:element name="MeasurementUnits" type="MeasurementUnitsType" minOccurs="0" maxOccurs="1"/>
      <!--
 Magaya network ID of the system that created this Warehouse Receipt 
-->
      <xs:element name="CreatorNetworkID" type="xs:long" minOccurs="0" maxOccurs="1"/>
      <!--  Charges that apply to this Warehouse Receipt  -->
      <xs:element name="Charges" type="ChargeList" minOccurs="0" maxOccurs="1"/>
      <!--  Events related to this Warehouse Receipt  -->
      <xs:element name="Events" type="EventList" minOccurs="0" maxOccurs="1"/>
      <!--  Division that created this Warehouse Receipt  -->
      <xs:element name="Division" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Total Pieces  -->
      <xs:element name="TotalPieces" type="xs:integer" minOccurs="0" maxOccurs="1"/>
      <!--  Total Weight  -->
      <xs:element name="TotalWeight" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Total Volume  -->
      <xs:element name="TotalVolume" type="VolumeValue" minOccurs="0" maxOccurs="1"/>
      <!--  Total Value  -->
      <xs:element name="TotalValue" type="MoneyValue" minOccurs="0" maxOccurs="1"/>
      <!--  Total Volume Weight  -->
      <xs:element name="TotalVolumeWeight" type="VolumeWeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Total Chargeable Weight  -->
      <xs:element name="ChargeableWeight" type="WeightValue" minOccurs="0" maxOccurs="1"/>
      <!--  Port of origin in case of export  -->
      <xs:element name="OriginPort" type="PortType" minOccurs="0" maxOccurs="1"/>
      <!--  Port of destination in case of export  -->
      <xs:element name="DestinationPort" type="PortType" minOccurs="0" maxOccurs="1"/>
      <!--  Supplier name  -->
      <xs:element name="SupplierName" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Supplier address  -->
      <xs:element name="SupplierAddress" type="AddressType" minOccurs="0" maxOccurs="1"/>
      <!--  Supplier entity  -->
      <xs:element name="Supplier" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Supplier invoice number  -->
      <xs:element name="SupplierInvoiceNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Supplier purchase order number  -->
      <xs:element name="SupplierPONumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 If the Warehouse Receipt was created from a quote this is the quotation number 
-->
      <xs:element name="FromQuoteNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  True if this transaction has Attachments  -->
      <xs:element name="HasAttachments" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Attachments  -->
      <xs:element name="Attachments" type="AttachmentList" minOccurs="0" maxOccurs="1"/>
      <!--  Bonded entry type  -->
      <xs:element name="BondedEntry" type="BondedEntryType" minOccurs="0" maxOccurs="1"/>
      <!--  Bonded entry number  -->
      <xs:element name="BondedEntryNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Bonded entry date  -->
      <xs:element name="BondedEntryDate" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <!--  Booking number of the main carrier  -->
      <xs:element name="CarrierBookingNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--
 If the Warehouse Receipt was created from a booking in the system this is the booking number 
-->
      <xs:element name="FromBookingNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Main carrier that will do the exportation  -->
      <xs:element name="MainCarrier" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Client that will pay for the charges  -->
      <xs:element name="BillingClient" type="EntityType" minOccurs="0" maxOccurs="1"/>
      <!--  Last line item in this Warehouse Receipt  -->
      <xs:element name="LastItemID" type="xs:short" minOccurs="0" maxOccurs="1"/>
      <!--  URL to track this Warehouse Receipt  -->
      <xs:element name="URL" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <!--  Custom fields defined by the user  -->
      <xs:element name="CustomFields" type="CustomFieldList" minOccurs="0" maxOccurs="1"/>
      <!--  True if this Warehouse Receipt was placed online  -->
      <xs:element name="IsOnline" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
      <!--  Hold Status of WHReceipt  -->
      <xs:element name="HoldStatus" type="HoldStatusType" minOccurs="0" maxOccurs="1"/>
      <!--  True if this Warehouse Receipt was liquidated  -->
      <xs:element name="IsLiquidated" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
    </xs:all>
    <!--  Unique identifier (GUID) of the transaction  -->
    <xs:attribute name="GUID" type="GUIDType" use="optional"/>
    <!--
 Type that classifies this type of transaction that is used when calling API methods 
-->
    <xs:attribute name="Type" type="xs:string" use="optional"/>
  </xs:complexType>
  <!--  Warehouse Receipt status  -->
  <xs:simpleType name="WHRStatusType">
    <xs:restriction base="xs:string">
      <!--  Cargo is in the warehouse  -->
      <xs:enumeration value="OnHand"/>
      <!--  Cargo is being processed in a shipment  -->
      <xs:enumeration value="InProcess"/>
      <!--
 Cargo departed from the warehouse and is on its way to the destination 
-->
      <xs:enumeration value="InTransit"/>
      <!--  Cargo arrived at destination  -->
      <xs:enumeration value="AtDestination"/>
      <!--  Cargo delivered to the final consignee  -->
      <xs:enumeration value="Delivered"/>
      <!--  Warehouse Receipt has no items  -->
      <xs:enumeration value="Empty"/>
      <!--
 Used for pickup orders when they are on their way to the warehouse 
-->
      <xs:enumeration value="Arriving"/>
      <!--
 Warehouse Receipt that was created but the cargo has not been allocated in the warehouse 
-->
      <xs:enumeration value="Pending"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Types of bonded entries  -->
  <xs:simpleType name="BondedEntryType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Other"/>
      <xs:enumeration value="Domestic"/>
      <xs:enumeration value="Bonded"/>
      <xs:enumeration value="ContainerFreightStation"/>
      <xs:enumeration value="GeneralOrder"/>
    </xs:restriction>
  </xs:simpleType>
  <!--  Warehouse Receipt element  -->
  <xs:element name="WarehouseReceipt" type="WarehouseReceiptType"/>
  <!--  Warehouse Receipt list element  -->
  <xs:element name="WarehouseReceipts" type="WarehouseReceiptList"/>
  <!--  Warehouse Receipt list definition  -->
  <xs:complexType name="WarehouseReceiptList">
    <xs:sequence>
      <!--
 Describes an individual warehouse receipt in the list 
-->
      <xs:element name="WarehouseReceipt" type="WarehouseReceiptType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>